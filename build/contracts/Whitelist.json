{
  "contractName": "Whitelist",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_exchange",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "contentId",
          "type": "string"
        },
        {
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "adminUpdate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "adminUpdateWhitelistStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "adminRemoveContentIdFromAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "contentId",
          "type": "string"
        }
      ],
      "name": "adminGetAddressByContentId",
      "outputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        }
      ],
      "name": "adminGetContentIdsByAddress",
      "outputs": [
        {
          "components": [
            {
              "name": "contentId",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getContentIdsByAddress",
      "outputs": [
        {
          "components": [
            {
              "name": "contentId",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "salt",
          "type": "uint256"
        },
        {
          "name": "orderSignature",
          "type": "bytes"
        }
      ],
      "name": "fillOrderIfWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"makerAddress\",\"type\":\"address\"},{\"name\":\"takerAddress\",\"type\":\"address\"},{\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"name\":\"senderAddress\",\"type\":\"address\"},{\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"name\":\"makerFee\",\"type\":\"uint256\"},{\"name\":\"takerFee\",\"type\":\"uint256\"},{\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"name\":\"salt\",\"type\":\"uint256\"},{\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"name\":\"takerAssetData\",\"type\":\"bytes\"}],\"name\":\"order\",\"type\":\"tuple\"},{\"name\":\"takerAssetFillAmount\",\"type\":\"uint256\"},{\"name\":\"salt\",\"type\":\"uint256\"},{\"name\":\"orderSignature\",\"type\":\"bytes\"}],\"name\":\"fillOrderIfWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"name\":\"adminGetContentIdsByAddress\",\"outputs\":[{\"components\":[{\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentIdsByAddress\",\"outputs\":[{\"components\":[{\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"adminGetAddressByContentId\",\"outputs\":[{\"name\":\"target\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"hash\",\"type\":\"bytes32\"},{\"name\":\"signerAddress\",\"type\":\"address\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"name\":\"isValid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"contentId\",\"type\":\"string\"},{\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"adminUpdate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"contentId\",\"type\":\"string\"}],\"name\":\"adminRemoveContentIdFromAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"adminUpdateWhitelistStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_exchange\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"adminGetContentIdsByAddress(address)\":{\"details\":\"Admin gets contentIds mapped to a valid whitelisted address.\",\"params\":{\"target\":\"Ethereum address to validate & return contentIds for.\"}},\"adminRemoveContentIdFromAddress(address,string)\":{\"details\":\"Admin updates whitelist status for a given address.\"},\"adminUpdate(address,string,bool)\":{\"details\":\"Admin adds  mapping\",\"params\":{\"contentId\":\"To map the address to.\",\"isApproved\":\"Whitelist status to assign to address.\",\"target\":\"Address to add or remove from whitelist.\"}},\"adminUpdateWhitelistStatus(address,bool)\":{\"details\":\"Admin updates whitelist status for a given address.\",\"params\":{\"isApproved\":\"Whitelist status to assign to address.\",\"target\":\"Address to update.\"}},\"fillOrderIfWhitelisted((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,uint256,bytes)\":{\"details\":\"Fills an order using `msg.sender` as the taker.      The transaction will revert if both the maker and taker are not whitelisted.      Orders should specify this contract as the `senderAddress` in order to gaurantee      that both maker and taker have been whitelisted.\",\"params\":{\"order\":\"Order struct containing order specifications.\",\"orderSignature\":\"Proof that order has been created by maker.\",\"salt\":\"Arbitrary value to gaurantee uniqueness of 0x transaction hash.\",\"takerAssetFillAmount\":\"Desired amount of takerAsset to sell.\"}},\"getContentIdsByAddress()\":{\"details\":\"Valid whitelisted address can query its own contentIds.\"},\"isValidSignature(bytes32,address,bytes)\":{\"details\":\"Verifies signer is same as signer of current Ethereum transaction.      NOTE: This function can currently be used to validate signatures coming from outside of this contract.      Extra safety checks can be added for a production contract.\",\"params\":{\"signature\":\"Proof of signing.\",\"signerAddress\":\"Address that should have signed the given hash.\"},\"return\":\"Validity of order signature.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/lauren/github/registry-contract/contracts/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lauren/github/registry-contract/contracts/IAssetProxyDispatcher.sol\":{\"keccak256\":\"0x9f2df0836b76e56b8fe113c224a83b95ff0c984cedfb660286eab94edb151b88\",\"urls\":[\"bzzr://1c7ca7647f032f742277cfea04722c1241e136198f7b1b424c9eed709f175c53\"]},\"/Users/lauren/github/registry-contract/contracts/IExchange.sol\":{\"keccak256\":\"0x7640d57cbe84e44d21d70f988c75d8a3e396be090268665ed24de5aab130d89b\",\"urls\":[\"bzzr://2d8926f14c4c8e7d8d94fc045af7029fe5e2952cd59f5d24d1660afe89e8496c\"]},\"/Users/lauren/github/registry-contract/contracts/IExchangeCore.sol\":{\"keccak256\":\"0x692849db6311f64436b7091679d76b2f458ffa9d88b1127c34088bf1023f3d96\",\"urls\":[\"bzzr://0d2083b036ae3026985e435f427e6fc6d7ba1a3cadbcfb92a35d67ca0a313376\"]},\"/Users/lauren/github/registry-contract/contracts/IMatchOrders.sol\":{\"keccak256\":\"0xc8bc1846e6a380a329c1bffa69c1a8b814e0f79e75f074e021ee7b5abc941cc1\",\"urls\":[\"bzzr://0bc85fc36da995c219ce5009850cbf912405c1679e0da77b9de0ad02c050cf67\"]},\"/Users/lauren/github/registry-contract/contracts/ISignatureValidator.sol\":{\"keccak256\":\"0x90b44476bb95906ed861b3d038aa9578b6dead3283f5ec192c0985180dba7eee\",\"urls\":[\"bzzr://95730ccaa6602bffdaba8be7bafb18936a1eb711fd3c9b7bc66530602ff87fab\"]},\"/Users/lauren/github/registry-contract/contracts/ITransactions.sol\":{\"keccak256\":\"0x4604da6f13306fbdd56d453ff47c04d9f2dd71d94af511bcf246306f238c7fbf\",\"urls\":[\"bzzr://77f262e41caaee63031fafeea078718f0dfe735c90f6fc0b827735eb36a1b2d2\"]},\"/Users/lauren/github/registry-contract/contracts/IWrapperFunctions.sol\":{\"keccak256\":\"0xcb15626aac4b048e3982db276638a5a5828fc24fe6afdb58c1f8646dd3dc03ad\",\"urls\":[\"bzzr://bd17dc8173df53e93a5604c0ef5dd28585fdaaab9467c3e99f1bee89068536f5\"]},\"/Users/lauren/github/registry-contract/contracts/Whitelist.sol\":{\"keccak256\":\"0xd6ebbff3d9dec0ea99cfc325d15c4b3cc1159bf19304a3d99a64724bd3aefda0\",\"urls\":[\"bzzr://22668a2413760512b58ef56be3b24b2e68ea4d398a747a075145b76563177951\"]},\"@0x/contracts-exchange-libs/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0x9e3c7630c8389a8a13294a4224e7051ed5c64268864f53fc359377bdc8115c28\",\"urls\":[\"bzzr://af7152a1885ab00eb728e3e294b33b4eb1bdf3c2f6d423f5ce93d32da94f53dc\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xd2901bceaae8c4f1b6b13b38bf1c99dc8fa02fd82504009f8b82fc1c6a26c8ed\",\"urls\":[\"bzzr://eb694a8bbb5671db1e00f2ad8c99c6982448c2f9114e759f64ee00c52043c259\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0xaea24ce7e1f7f15dd6a3f58f7c93ffdb52bbba9527ecd7bc60271e21b253349f\",\"urls\":[\"bzzr://2a7fb7eb2c0775cc74161d37f9454da5f09e2ba00aa7248c38805f3dd7c3fada\"]},\"@0x/contracts-utils/contracts/src/Ownable.sol\":{\"keccak256\":\"0xe7c6767e3fa1f51e7086adc94cdd7cfcf7f606ffcafc8942fc2dbbb3d8aded40\",\"urls\":[\"bzzr://eaec8ad75455cecc32cdb01f7522cc35b3d2f47542b2d140e84e510fb69a7727\"]},\"@0x/contracts-utils/contracts/src/SafeMath.sol\":{\"keccak256\":\"0x27027b268113e424039e67bbab9bfcfd76d0e5707c4b3068af68382c8f35bd34\",\"urls\":[\"bzzr://254aa51bd03ccc0f5096315b0883b03de9a3bc7105744570d6a77e00f4c2d6bd\"]},\"@0x/contracts-utils/contracts/src/interfaces/IOwnable.sol\":{\"keccak256\":\"0xb48efd8c0afe60386dda1b01329b5ee8a65cae57b930bd6a010ae9af72b177cc\",\"urls\":[\"bzzr://025b49d4d83d2f9bcb4945381f4f92edf177d2667cdc15c9e1f755ca531f86e1\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620029468339810180604052620000339190810190620001dc565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550307f0500000000000000000000000000000000000000000000000000000000000000604051602001620000e99291906200023e565b604051602081830303815290604052600590805190602001906200010f92919062000117565b505062000341565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015a57805160ff19168380011785556200018b565b828001600101855582156200018b579182015b828111156200018a5782518255916020019190600101906200016d565b5b5090506200019a91906200019e565b5090565b620001c391905b80821115620001bf576000816000905550600101620001a5565b5090565b90565b6000620001d48251620002ce565b905092915050565b600060208284031215620001ef57600080fd5b6000620001ff84828501620001c6565b91505092915050565b6200021d62000217826200026e565b62000302565b82525050565b62000238620002328262000282565b62000316565b82525050565b60006200024c828562000208565b6014820191506200025e828462000223565b6001820191508190509392505050565b60006200027b82620002ae565b9050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002db82620002e2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030f8262000320565b9050919050565b6000819050919050565b60006200032d8262000334565b9050919050565b60008160601b9050919050565b6125f580620003516000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101785780639363470214610196578063de08679a146101c6578063ed5d0bcf146101e2578063f2fde38b146101fe578063f5ccddcc1461021a576100a9565b8063141da876146100ae5780633af32abf146100ca57806349816041146100fa57806365d9abbb1461012a5780637b97d03414610148575b600080fd5b6100c860048036036100c39190810190611b52565b610236565b005b6100e460048036036100df9190810190611978565b610520565b6040516100f191906121f3565b60405180910390f35b610114600480360361010f9190810190611978565b610540565b60405161012191906121d1565b60405180910390f35b61013261079b565b60405161013f91906121d1565b60405180910390f35b610162600480360361015d9190810190611b0d565b610963565b60405161016f91906121b6565b60405180910390f35b610180610a3f565b60405161018d91906121b6565b60405180910390f35b6101b060048036036101ab9190810190611aa1565b610a64565b6040516101bd91906121f3565b60405180910390f35b6101e060048036036101db9190810190611a35565b610a9f565b005b6101fc60048036036101f791908101906119dd565b610dec565b005b61021860048036036102139190810190611978565b6111a8565b005b610234600480360361022f91908101906119a1565b6112b3565b005b60003390503273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a2906122ce565b60405180910390fd5b60016000866000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561033d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610334906122ae565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c29061220e565b60405180910390fd5b6060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4be83d5905060e01b868685604051602401610425939291906122ee565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bfc8bfce85848460056040518563ffffffff1660e01b81526004016104e69493929190612333565b600060405180830381600087803b15801561050057600080fd5b505af1158015610514573d6000803e3d6000fd5b50505050505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca9061228e565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106589061222e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561079057838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107785780601f1061074d57610100808354040283529160200191610778565b820191906000526020600020905b81548152906001019060200180831161075b57829003601f168201915b505050505081525050815260200190600101906106c0565b505050509050919050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561082b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610822906122ce565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561095a57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109425780601f1061091757610100808354040283529160200191610942565b820191906000526020600020905b81548152906001019060200180831161092557829003601f168201915b5050505050815250508152602001906001019061088a565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed9061228e565b60405180910390fd5b60028383604051610a08929190612186565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b279061228e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660028484604051610b59929190612186565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d8f57600073ffffffffffffffffffffffffffffffffffffffff1660028484604051610bcf929190612186565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d9061224e565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806020016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152509080600181540180825580915050906001820390600052602060002001600090919290919091506000820151816000019080519060200190610d2b9291906115f1565b505050508360028484604051610d42929190612186565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e749061228e565b60405180910390fd5b600060028383604051610e91929190612186565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561100e57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ff65780601f10610fcb57610100808354040283529160200191610ff6565b820191906000526020600020905b815481529060010190602001808311610fd957829003601f168201915b50505050508152505081526020019060010190610f3e565b50505050905060008090505b81518110156111335761108c84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050838381518110151561107957fe5b90602001906020020151600001516113f0565b1561112657604051806020016040528060405180602001604052806000815250815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156110fb57fe5b9060005260206000200160008201518160000190805190602001906111219291906115f1565b509050505b808060010191505061101a565b50600061113f85611449565b61ffff1614156111a2576000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112309061228e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156112b057806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b9061228e565b60405180910390fd5b600061134f83611449565b61ffff16111515611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c9061226e565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081604051602001611403919061219f565b604051602081830303815290604052805190602001208360405160200161142a919061219f565b6040516020818303038152906040528051906020012014905092915050565b60006060600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561157c57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115645780601f1061153957610100808354040283529160200191611564565b820191906000526020600020905b81548152906001019060200180831161154757829003601f168201915b505050505081525050815260200190600101906114ac565b505050509050600080905060008090505b82518110156115e6576115ca6040518060200160405280600081525084838151811015156115b757fe5b90602001906020020151600001516113f0565b15156115d95781806001019250505b808060010191505061158d565b508092505050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061163257805160ff1916838001178555611660565b82800160010185558215611660579182015b8281111561165f578251825591602001919060010190611644565b5b50905061166d9190611671565b5090565b61169391905b8082111561168f576000816000905550600101611677565b5090565b90565b60006116a28235612516565b905092915050565b60006116b68235612528565b905092915050565b60006116ca8235612534565b905092915050565b60008083601f84011215156116e657600080fd5b8235905067ffffffffffffffff8111156116ff57600080fd5b60208301915083600182028301111561171757600080fd5b9250929050565b600082601f830112151561173157600080fd5b813561174461173f826123b3565b612386565b9150808252602083016020830185838301111561176057600080fd5b61176b838284612568565b50505092915050565b600082601f830112151561178757600080fd5b813561179a611795826123df565b612386565b915080825260208301602083018583830111156117b657600080fd5b6117c1838284612568565b50505092915050565b60008083601f84011215156117de57600080fd5b8235905067ffffffffffffffff8111156117f757600080fd5b60208301915083600182028301111561180f57600080fd5b9250929050565b6000610180828403121561182957600080fd5b611834610180612386565b9050600061184484828501611696565b600083015250602061185884828501611696565b602083015250604061186c84828501611696565b604083015250606061188084828501611696565b606083015250608061189484828501611964565b60808301525060a06118a884828501611964565b60a08301525060c06118bc84828501611964565b60c08301525060e06118d084828501611964565b60e0830152506101006118e584828501611964565b610100830152506101206118fb84828501611964565b6101208301525061014082013567ffffffffffffffff81111561191d57600080fd5b6119298482850161171e565b6101408301525061016082013567ffffffffffffffff81111561194b57600080fd5b6119578482850161171e565b6101608301525092915050565b6000611970823561255e565b905092915050565b60006020828403121561198a57600080fd5b600061199884828501611696565b91505092915050565b600080604083850312156119b457600080fd5b60006119c285828601611696565b92505060206119d3858286016116aa565b9150509250929050565b6000806000604084860312156119f257600080fd5b6000611a0086828701611696565b935050602084013567ffffffffffffffff811115611a1d57600080fd5b611a29868287016117ca565b92509250509250925092565b60008060008060608587031215611a4b57600080fd5b6000611a5987828801611696565b945050602085013567ffffffffffffffff811115611a7657600080fd5b611a82878288016117ca565b93509350506040611a95878288016116aa565b91505092959194509250565b60008060008060608587031215611ab757600080fd5b6000611ac5878288016116be565b9450506020611ad687828801611696565b935050604085013567ffffffffffffffff811115611af357600080fd5b611aff878288016116d2565b925092505092959194509250565b60008060208385031215611b2057600080fd5b600083013567ffffffffffffffff811115611b3a57600080fd5b611b46858286016117ca565b92509250509250929050565b60008060008060808587031215611b6857600080fd5b600085013567ffffffffffffffff811115611b8257600080fd5b611b8e87828801611816565b9450506020611b9f87828801611964565b9350506040611bb087828801611964565b925050606085013567ffffffffffffffff811115611bcd57600080fd5b611bd987828801611774565b91505092959194509250565b6000611bf18383612033565b905092915050565b611c02816124ce565b82525050565b611c11816124ce565b82525050565b6000611c228261242a565b611c2c818561246e565b935083602082028501611c3e8561240b565b60005b84811015611c77578383038852611c59838351611be5565b9250611c6482612461565b9150602088019750600181019050611c41565b508196508694505050505092915050565b611c91816124e0565b82525050565b6000611ca282612440565b611cac8185612490565b9350611cbc818560208601612577565b611cc5816125aa565b840191505092915050565b6000611cdb82612435565b611ce5818561247f565b9350611cf5818560208601612577565b611cfe816125aa565b840191505092915050565b600081546001811660008114611d265760018114611d4c57611d90565b607f6002830416611d378187612490565b955060ff198316865260208601935050611d90565b60028204611d5a8187612490565b9550611d6585612418565b60005b82811015611d8757815481890152600182019150602081019050611d68565b80880195505050505b505092915050565b6000611da483856124c3565b9350611db1838584612568565b82840190509392505050565b6000611dc882612456565b611dd281856124c3565b9350611de2818560208601612577565b80840191505092915050565b6000611df98261244b565b611e0381856124a1565b9350611e13818560208601612577565b611e1c816125aa565b840191505092915050565b6000611e346015836124b2565b91507f54414b45525f4e4f545f57484954454c495354454400000000000000000000006000830152602082019050919050565b6000611e746017836124b2565b91507f414444524553535f4e4f545f57484954454c49535445440000000000000000006000830152602082019050919050565b6000611eb4602d836124b2565b91507f52454d4f56455f434f4e54454e545f49445f46524f4d5f50524556494f55535f60008301527f4f574e45525f41444452455353000000000000000000000000000000000000006020830152604082019050919050565b6000611f1a6025836124b2565b91507f414444524553535f4841535f4e4f5f4153534f4349415445445f434f4e54454e60008301527f545f4944530000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f806013836124b2565b91507f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006000830152602082019050919050565b6000611fc06015836124b2565b91507f4d414b45525f4e4f545f57484954454c495354454400000000000000000000006000830152602082019050919050565b6000612000600e836124b2565b91507f494e56414c49445f53454e4445520000000000000000000000000000000000006000830152602082019050919050565b600060208301600083015184820360008601526120508282611dee565b9150508091505092915050565b6000610180830160008301516120766000860182611bf9565b5060208301516120896020860182611bf9565b50604083015161209c6040860182611bf9565b5060608301516120af6060860182611bf9565b5060808301516120c26080860182612168565b5060a08301516120d560a0860182612168565b5060c08301516120e860c0860182612168565b5060e08301516120fb60e0860182612168565b50610100830151612110610100860182612168565b50610120830151612125610120860182612168565b5061014083015184820361014086015261213f8282611cd0565b91505061016083015184820361016086015261215b8282611cd0565b9150508091505092915050565b6121718161250c565b82525050565b6121808161250c565b82525050565b6000612193828486611d98565b91508190509392505050565b60006121ab8284611dbd565b915081905092915050565b60006020820190506121cb6000830184611c08565b92915050565b600060208201905081810360008301526121eb8184611c17565b905092915050565b60006020820190506122086000830184611c88565b92915050565b6000602082019050818103600083015261222781611e27565b9050919050565b6000602082019050818103600083015261224781611e67565b9050919050565b6000602082019050818103600083015261226781611ea7565b9050919050565b6000602082019050818103600083015261228781611f0d565b9050919050565b600060208201905081810360008301526122a781611f73565b9050919050565b600060208201905081810360008301526122c781611fb3565b9050919050565b600060208201905081810360008301526122e781611ff3565b9050919050565b60006060820190508181036000830152612308818661205d565b90506123176020830185612177565b81810360408301526123298184611c97565b9050949350505050565b60006080820190506123486000830187612177565b6123556020830186611c08565b81810360408301526123678185611c97565b9050818103606083015261237b8184611d09565b905095945050505050565b6000604051905081810181811067ffffffffffffffff821117156123a957600080fd5b8060405250919050565b600067ffffffffffffffff8211156123ca57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156123f657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006124d9826124ec565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125218261253e565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561259557808201518184015260208101905061257a565b838111156125a4576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820fe8eae3304e881f599d7c2fae1f749e9799f79231468122ae3c44a3764dce31b6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101785780639363470214610196578063de08679a146101c6578063ed5d0bcf146101e2578063f2fde38b146101fe578063f5ccddcc1461021a576100a9565b8063141da876146100ae5780633af32abf146100ca57806349816041146100fa57806365d9abbb1461012a5780637b97d03414610148575b600080fd5b6100c860048036036100c39190810190611b52565b610236565b005b6100e460048036036100df9190810190611978565b610520565b6040516100f191906121f3565b60405180910390f35b610114600480360361010f9190810190611978565b610540565b60405161012191906121d1565b60405180910390f35b61013261079b565b60405161013f91906121d1565b60405180910390f35b610162600480360361015d9190810190611b0d565b610963565b60405161016f91906121b6565b60405180910390f35b610180610a3f565b60405161018d91906121b6565b60405180910390f35b6101b060048036036101ab9190810190611aa1565b610a64565b6040516101bd91906121f3565b60405180910390f35b6101e060048036036101db9190810190611a35565b610a9f565b005b6101fc60048036036101f791908101906119dd565b610dec565b005b61021860048036036102139190810190611978565b6111a8565b005b610234600480360361022f91908101906119a1565b6112b3565b005b60003390503273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156102ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a2906122ce565b60405180910390fd5b60016000866000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561033d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610334906122ae565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156103cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c29061220e565b60405180910390fd5b6060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4be83d5905060e01b868685604051602401610425939291906122ee565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bfc8bfce85848460056040518563ffffffff1660e01b81526004016104e69493929190612333565b600060405180830381600087803b15801561050057600080fd5b505af1158015610514573d6000803e3d6000fd5b50505050505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60606000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca9061228e565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610661576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106589061222e565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561079057838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107785780601f1061074d57610100808354040283529160200191610778565b820191906000526020600020905b81548152906001019060200180831161075b57829003601f168201915b505050505081525050815260200190600101906106c0565b505050509050919050565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561082b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610822906122ce565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561095a57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109425780601f1061091757610100808354040283529160200191610942565b820191906000526020600020905b81548152906001019060200180831161092557829003601f168201915b5050505050815250508152602001906001019061088a565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed9061228e565b60405180910390fd5b60028383604051610a08929190612186565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b279061228e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660028484604051610b59929190612186565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d8f57600073ffffffffffffffffffffffffffffffffffffffff1660028484604051610bcf929190612186565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d9061224e565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806020016040528085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152509080600181540180825580915050906001820390600052602060002001600090919290919091506000820151816000019080519060200190610d2b9291906115f1565b505050508360028484604051610d42929190612186565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e749061228e565b60405180910390fd5b600060028383604051610e91929190612186565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561100e57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ff65780601f10610fcb57610100808354040283529160200191610ff6565b820191906000526020600020905b815481529060010190602001808311610fd957829003601f168201915b50505050508152505081526020019060010190610f3e565b50505050905060008090505b81518110156111335761108c84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050838381518110151561107957fe5b90602001906020020151600001516113f0565b1561112657604051806020016040528060405180602001604052806000815250815250600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156110fb57fe5b9060005260206000200160008201518160000190805190602001906111219291906115f1565b509050505b808060010191505061101a565b50600061113f85611449565b61ffff1614156111a2576000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611239576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112309061228e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156112b057806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b9061228e565b60405180910390fd5b600061134f83611449565b61ffff16111515611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c9061226e565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600081604051602001611403919061219f565b604051602081830303815290604052805190602001208360405160200161142a919061219f565b6040516020818303038152906040528051906020012014905092915050565b60006060600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561157c57838290600052602060002001604051806020016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115645780601f1061153957610100808354040283529160200191611564565b820191906000526020600020905b81548152906001019060200180831161154757829003601f168201915b505050505081525050815260200190600101906114ac565b505050509050600080905060008090505b82518110156115e6576115ca6040518060200160405280600081525084838151811015156115b757fe5b90602001906020020151600001516113f0565b15156115d95781806001019250505b808060010191505061158d565b508092505050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061163257805160ff1916838001178555611660565b82800160010185558215611660579182015b8281111561165f578251825591602001919060010190611644565b5b50905061166d9190611671565b5090565b61169391905b8082111561168f576000816000905550600101611677565b5090565b90565b60006116a28235612516565b905092915050565b60006116b68235612528565b905092915050565b60006116ca8235612534565b905092915050565b60008083601f84011215156116e657600080fd5b8235905067ffffffffffffffff8111156116ff57600080fd5b60208301915083600182028301111561171757600080fd5b9250929050565b600082601f830112151561173157600080fd5b813561174461173f826123b3565b612386565b9150808252602083016020830185838301111561176057600080fd5b61176b838284612568565b50505092915050565b600082601f830112151561178757600080fd5b813561179a611795826123df565b612386565b915080825260208301602083018583830111156117b657600080fd5b6117c1838284612568565b50505092915050565b60008083601f84011215156117de57600080fd5b8235905067ffffffffffffffff8111156117f757600080fd5b60208301915083600182028301111561180f57600080fd5b9250929050565b6000610180828403121561182957600080fd5b611834610180612386565b9050600061184484828501611696565b600083015250602061185884828501611696565b602083015250604061186c84828501611696565b604083015250606061188084828501611696565b606083015250608061189484828501611964565b60808301525060a06118a884828501611964565b60a08301525060c06118bc84828501611964565b60c08301525060e06118d084828501611964565b60e0830152506101006118e584828501611964565b610100830152506101206118fb84828501611964565b6101208301525061014082013567ffffffffffffffff81111561191d57600080fd5b6119298482850161171e565b6101408301525061016082013567ffffffffffffffff81111561194b57600080fd5b6119578482850161171e565b6101608301525092915050565b6000611970823561255e565b905092915050565b60006020828403121561198a57600080fd5b600061199884828501611696565b91505092915050565b600080604083850312156119b457600080fd5b60006119c285828601611696565b92505060206119d3858286016116aa565b9150509250929050565b6000806000604084860312156119f257600080fd5b6000611a0086828701611696565b935050602084013567ffffffffffffffff811115611a1d57600080fd5b611a29868287016117ca565b92509250509250925092565b60008060008060608587031215611a4b57600080fd5b6000611a5987828801611696565b945050602085013567ffffffffffffffff811115611a7657600080fd5b611a82878288016117ca565b93509350506040611a95878288016116aa565b91505092959194509250565b60008060008060608587031215611ab757600080fd5b6000611ac5878288016116be565b9450506020611ad687828801611696565b935050604085013567ffffffffffffffff811115611af357600080fd5b611aff878288016116d2565b925092505092959194509250565b60008060208385031215611b2057600080fd5b600083013567ffffffffffffffff811115611b3a57600080fd5b611b46858286016117ca565b92509250509250929050565b60008060008060808587031215611b6857600080fd5b600085013567ffffffffffffffff811115611b8257600080fd5b611b8e87828801611816565b9450506020611b9f87828801611964565b9350506040611bb087828801611964565b925050606085013567ffffffffffffffff811115611bcd57600080fd5b611bd987828801611774565b91505092959194509250565b6000611bf18383612033565b905092915050565b611c02816124ce565b82525050565b611c11816124ce565b82525050565b6000611c228261242a565b611c2c818561246e565b935083602082028501611c3e8561240b565b60005b84811015611c77578383038852611c59838351611be5565b9250611c6482612461565b9150602088019750600181019050611c41565b508196508694505050505092915050565b611c91816124e0565b82525050565b6000611ca282612440565b611cac8185612490565b9350611cbc818560208601612577565b611cc5816125aa565b840191505092915050565b6000611cdb82612435565b611ce5818561247f565b9350611cf5818560208601612577565b611cfe816125aa565b840191505092915050565b600081546001811660008114611d265760018114611d4c57611d90565b607f6002830416611d378187612490565b955060ff198316865260208601935050611d90565b60028204611d5a8187612490565b9550611d6585612418565b60005b82811015611d8757815481890152600182019150602081019050611d68565b80880195505050505b505092915050565b6000611da483856124c3565b9350611db1838584612568565b82840190509392505050565b6000611dc882612456565b611dd281856124c3565b9350611de2818560208601612577565b80840191505092915050565b6000611df98261244b565b611e0381856124a1565b9350611e13818560208601612577565b611e1c816125aa565b840191505092915050565b6000611e346015836124b2565b91507f54414b45525f4e4f545f57484954454c495354454400000000000000000000006000830152602082019050919050565b6000611e746017836124b2565b91507f414444524553535f4e4f545f57484954454c49535445440000000000000000006000830152602082019050919050565b6000611eb4602d836124b2565b91507f52454d4f56455f434f4e54454e545f49445f46524f4d5f50524556494f55535f60008301527f4f574e45525f41444452455353000000000000000000000000000000000000006020830152604082019050919050565b6000611f1a6025836124b2565b91507f414444524553535f4841535f4e4f5f4153534f4349415445445f434f4e54454e60008301527f545f4944530000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f806013836124b2565b91507f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006000830152602082019050919050565b6000611fc06015836124b2565b91507f4d414b45525f4e4f545f57484954454c495354454400000000000000000000006000830152602082019050919050565b6000612000600e836124b2565b91507f494e56414c49445f53454e4445520000000000000000000000000000000000006000830152602082019050919050565b600060208301600083015184820360008601526120508282611dee565b9150508091505092915050565b6000610180830160008301516120766000860182611bf9565b5060208301516120896020860182611bf9565b50604083015161209c6040860182611bf9565b5060608301516120af6060860182611bf9565b5060808301516120c26080860182612168565b5060a08301516120d560a0860182612168565b5060c08301516120e860c0860182612168565b5060e08301516120fb60e0860182612168565b50610100830151612110610100860182612168565b50610120830151612125610120860182612168565b5061014083015184820361014086015261213f8282611cd0565b91505061016083015184820361016086015261215b8282611cd0565b9150508091505092915050565b6121718161250c565b82525050565b6121808161250c565b82525050565b6000612193828486611d98565b91508190509392505050565b60006121ab8284611dbd565b915081905092915050565b60006020820190506121cb6000830184611c08565b92915050565b600060208201905081810360008301526121eb8184611c17565b905092915050565b60006020820190506122086000830184611c88565b92915050565b6000602082019050818103600083015261222781611e27565b9050919050565b6000602082019050818103600083015261224781611e67565b9050919050565b6000602082019050818103600083015261226781611ea7565b9050919050565b6000602082019050818103600083015261228781611f0d565b9050919050565b600060208201905081810360008301526122a781611f73565b9050919050565b600060208201905081810360008301526122c781611fb3565b9050919050565b600060208201905081810360008301526122e781611ff3565b9050919050565b60006060820190508181036000830152612308818661205d565b90506123176020830185612177565b81810360408301526123298184611c97565b9050949350505050565b60006080820190506123486000830187612177565b6123556020830186611c08565b81810360408301526123678185611c97565b9050818103606083015261237b8184611d09565b905095945050505050565b6000604051905081810181811067ffffffffffffffff821117156123a957600080fd5b8060405250919050565b600067ffffffffffffffff8211156123ca57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156123f657600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006124d9826124ec565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125218261253e565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561259557808201518184015260208101905061257a565b838111156125a4576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820fe8eae3304e881f599d7c2fae1f749e9799f79231468122ae3c44a3764dce31b6c6578706572696d656e74616cf50037",
  "sourceMap": "993:7740:8:-;;;1708:188;8:9:-1;5:2;;;30:1;27;20:12;5:2;1708:188:8;;;;;;;;;;;;;;;;;;;;;;181:10:12;173:5;;:18;;;;;;;;;;;;;;;;;;1790:9:8;1769:8;;:31;;;;;;;;;;;;;;;;;;1857:4;1864:24;1832:57;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1832:57:8;;;1810:19;:79;;;;;;;;;;;;:::i;:::-;;1708:188;993:7740;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:159;505:52;525:31;550:5;525:31;;;505:52;;;500:3;493:65;487:76;;;570:155;669:50;688:30;712:5;688:30;;;669:50;;;664:3;657:63;651:74;;;732:378;;877:75;948:3;939:6;877:75;;;974:2;969:3;965:12;958:19;;988:73;1057:3;1048:6;988:73;;;1083:1;1078:3;1074:11;1067:18;;1102:3;1095:10;;865:245;;;;;;1117:105;;1186:31;1211:5;1186:31;;;1175:42;;1169:53;;;;1229:151;;1308:66;1301:5;1297:78;1286:89;;1280:100;;;;1387:128;;1467:42;1460:5;1456:54;1445:65;;1439:76;;;;1522:105;;1591:31;1616:5;1591:31;;;1580:42;;1574:53;;;;1634:128;;1714:42;1707:5;1703:54;1692:65;;1686:76;;;;1769:95;;1833:26;1853:5;1833:26;;;1822:37;;1816:48;;;;1871:73;;1934:5;1923:16;;1917:27;;;;1951:89;;2015:20;2029:5;2015:20;;;2004:31;;1998:42;;;;2048:81;;2117:5;2113:2;2109:14;2097:26;;2090:39;;;;993:7740:8;;;;;;;",
  "deployedSourceMap": "993:7740:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;993:7740:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6864:1204;;;;;;;;;;;;;;;;:::i;:::-;;1118:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4791:317;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5184:265;;;:::i;:::-;;;;;;;;;;;;;;;;4417:217;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;102:20:12;;;:::i;:::-;;;;;;;;;;;;;;;;5928:287:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2111:920;;;;;;;;;;;;;;;;:::i;:::-;;3661:749;;;;;;;;;;;;;;;;:::i;:::-;;344:167:12;;;;;;;;;;;;;;;;:::i;:::-;;3209:381:8;;;;;;;;;;;;;;;;:::i;:::-;;6864:1204;7065:20;7088:10;7065:33;;7273:9;7257:25;;:12;:25;;;7179:143;;;;;;;;;;;;;;;;;;;;;;;;7401:13;:33;7415:5;:18;;;7401:33;;;;;;;;;;;;;;;;;;;;;;;;;7380:101;;;;;;;;;;;;;;;;;;;;;;;;7560:13;:27;7574:12;7560:27;;;;;;;;;;;;;;;;;;;;;;;;;7539:95;;;;;;;;;;;;;;;;;;;;;;;;7690:17;7746:8;;;;;;;;;;;:18;;;:27;;;;7787:5;7806:20;7840:14;7710:154;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7710:154:8;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;7710:154:8;7690:174;;7929:8;;;;;;;;;;;:27;;;7970:4;7988:12;8014:4;8032:19;7929:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7929:132:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7929:132:8;;;;6864:1204;;;;;;:::o;1118:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;4791:317::-;4923:24;270:5:12;;;;;;;;;;;256:19;;:10;:19;;;235:85;;;;;;;;;;;;;;;;;;;;;;;;4985:13:8;:21;4999:6;4985:21;;;;;;;;;;;;;;;;;;;;;;;;;4964:91;;;;;;;;;;;;;;;;;;;;;;;;5073:19;:27;5093:6;5073:27;;;;;;;;;;;;;;;5066:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4791:317;;;:::o;5184:265::-;5265:24;5327:13;:25;5341:10;5327:25;;;;;;;;;;;;;;;;;;;;;;;;;5306:86;;;;;;;;;;;;;;;;;;;;;;;;5410:19;:31;5430:10;5410:31;;;;;;;;;;;;;;;5403:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5184:265;:::o;4417:217::-;4559:14;270:5:12;;;;;;;;;;;256:19;;:10;:19;;;235:85;;;;;;;;;;;;;;;;;;;;;;;;4597:18:8;4616:9;;4597:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4590:36;;4417:217;;;;:::o;102:20:12:-;;;;;;;;;;;;;:::o;5928:287:8:-;6094:12;6199:9;6182:26;;:13;:26;;;6175:33;;5928:287;;;;;;:::o;2111:920::-;270:5:12;;;;;;;;;;;256:19;;:10;:19;;;235:85;;;;;;;;;;;;;;;;;;;;;;;;2404:6:8;2371:39;;:18;2390:9;;2371:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;;2367:612;;;2671:42;2638:75;;:18;2657:9;;2638:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:75;;;2613:179;;;;;;;;;;;;;;;;;;;;;;;;2853:19;:27;2873:6;2853:27;;;;;;;;;;;;;;;2887:26;;;;;;;;2903:9;;2887:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2887::8;;;;;;;;;2853:62;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2853:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2961:6;2929:18;2948:9;;2929:29;;;;;;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2367:612;3013:10;2989:13;:21;3003:6;2989:21;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2111:920;;;;:::o;3661:749::-;270:5:12;;;;;;;;;;;256:19;;:10;:19;;;235:85;;;;;;;;;;;;;;;;;;;;;;;;3857:42:8;3817:18;3836:9;;3817:29;;;;;;;;;;;;;;;;;;;;;;:83;;;;;;;;;;;;;;;;;;3973:26;4002:19;:27;4022:6;4002:27;;;;;;;;;;;;;;;3973:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4044:6;4053:1;4044:10;;4039:190;4060:1;:8;4056:1;:12;4039:190;;;4093:39;4106:9;;4093:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4093:39:8;;;;;;4117:1;4119;4117:4;;;;;;;;;;;;;;;;;;:14;;;4093:12;:39::i;:::-;4089:130;;;4185:19;;;;;;;;;;;;;;;;;;;;;;;4152;:27;4172:6;4152:27;;;;;;;;;;;;;;;4180:1;4152:30;;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4089:130;4070:3;;;;;;;4039:190;;;;4346:1;4318:24;4335:6;4318:16;:24::i;:::-;:29;;;4314:89;;;4387:5;4363:13;:21;4377:6;4363:21;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4314:89;330:1:12;3661:749:8;;;:::o;344:167:12:-;270:5;;;;;;;;;;;256:19;;:10;:19;;;235:85;;;;;;;;;;;;;;;;;;;;;;;;460:1;440:22;;:8;:22;;;;436:69;;;486:8;478:5;;:16;;;;;;;;;;;;;;;;;;436:69;344:167;:::o;3209:381:8:-;270:5:12;;;;;;;;;;;256:19;;:10;:19;;;235:85;;;;;;;;;;;;;;;;;;;;;;;;3475:1:8;3448:24;3465:6;3448:16;:24::i;:::-;:28;;;3429:108;;;;;;;;;;;;;;;;;;;;;;;;3572:10;3548:13;:21;3562:6;3548:21;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3209:381;;:::o;8094:230::-;8219:4;8311:1;8293:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8293:21:8;;;8283:32;;;;;;8275:1;8257:21;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8257:21:8;;;8247:32;;;;;;:68;8239:78;;8094:230;;;;:::o;8330:400::-;8433:13;8463:26;8492:19;:27;8512:6;8492:27;;;;;;;;;;;;;;;8463:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8529:14;8546:1;8529:18;;8562:6;8571:1;8562:10;;8557:141;8578:1;:8;8574:1;:12;8557:141;;;8612:32;;;;;;;;;;;;;8629:1;8631;8629:4;;;;;;;;;;;;;;;;;;:14;;;8612:12;:32::i;:::-;8611:33;8607:81;;;8664:9;;;;;;;8607:81;8588:3;;;;;;;8557:141;;;;8715:7;8708:14;;;;8330:400;;;:::o;993:7740::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:112;;194:43;229:6;216:20;194:43;;;185:52;;179:63;;;;;249:118;;316:46;354:6;341:20;316:46;;;307:55;;301:66;;;;;388:335;;;502:3;495:4;487:6;483:17;479:27;472:35;469:2;;;520:1;517;510:12;469:2;553:6;540:20;530:30;;580:18;572:6;569:30;566:2;;;612:1;609;602:12;566:2;646:4;638:6;634:17;622:29;;696:3;689;681:6;677:16;667:8;663:31;660:40;657:2;;;713:1;710;703:12;657:2;462:261;;;;;;732:432;;829:3;822:4;814:6;810:17;806:27;799:35;796:2;;;847:1;844;837:12;796:2;884:6;871:20;906:60;921:44;958:6;921:44;;;906:60;;;897:69;;986:6;979:5;972:21;1022:4;1014:6;1010:17;1055:4;1048:5;1044:16;1090:3;1081:6;1076:3;1072:16;1069:25;1066:2;;;1107:1;1104;1097:12;1066:2;1117:41;1151:6;1146:3;1141;1117:41;;;789:375;;;;;;;;1173:440;;1274:3;1267:4;1259:6;1255:17;1251:27;1244:35;1241:2;;;1292:1;1289;1282:12;1241:2;1329:6;1316:20;1351:64;1366:48;1407:6;1366:48;;;1351:64;;;1342:73;;1435:6;1428:5;1421:21;1471:4;1463:6;1459:17;1504:4;1497:5;1493:16;1539:3;1530:6;1525:3;1521:16;1518:25;1515:2;;;1556:1;1553;1546:12;1515:2;1566:41;1600:6;1595:3;1590;1566:41;;;1234:379;;;;;;;;1636:336;;;1751:3;1744:4;1736:6;1732:17;1728:27;1721:35;1718:2;;;1769:1;1766;1759:12;1718:2;1802:6;1789:20;1779:30;;1829:18;1821:6;1818:30;1815:2;;;1861:1;1858;1851:12;1815:2;1895:4;1887:6;1883:17;1871:29;;1945:3;1938;1930:6;1926:16;1916:8;1912:31;1909:40;1906:2;;;1962:1;1959;1952:12;1906:2;1711:261;;;;;;2008:2208;;2119:5;2107:9;2102:3;2098:19;2094:31;2091:2;;;2138:1;2135;2128:12;2091:2;2156:21;2171:5;2156:21;;;2147:30;;2235:1;2266:49;2311:3;2302:6;2291:9;2287:22;2266:49;;;2260:3;2253:5;2249:15;2242:74;2187:140;2385:2;2418:49;2463:3;2454:6;2443:9;2439:22;2418:49;;;2411:4;2404:5;2400:16;2393:75;2337:142;2544:2;2577:49;2622:3;2613:6;2602:9;2598:22;2577:49;;;2570:4;2563:5;2559:16;2552:75;2489:149;2697:2;2730:49;2775:3;2766:6;2755:9;2751:22;2730:49;;;2723:4;2716:5;2712:16;2705:75;2648:143;2853:3;2887:49;2932:3;2923:6;2912:9;2908:22;2887:49;;;2880:4;2873:5;2869:16;2862:75;2801:147;3010:3;3044:49;3089:3;3080:6;3069:9;3065:22;3044:49;;;3037:4;3030:5;3026:16;3019:75;2958:147;3159:3;3193:49;3238:3;3229:6;3218:9;3214:22;3193:49;;;3186:4;3179:5;3175:16;3168:75;3115:139;3308:3;3342:49;3387:3;3378:6;3367:9;3363:22;3342:49;;;3335:4;3328:5;3324:16;3317:75;3264:139;3470:3;3505:49;3550:3;3541:6;3530:9;3526:22;3505:49;;;3497:5;3490;3486:17;3479:76;3413:153;3616:3;3651:49;3696:3;3687:6;3676:9;3672:22;3651:49;;;3643:5;3636;3632:17;3625:76;3576:136;3800:3;3789:9;3785:19;3772:33;3825:18;3817:6;3814:30;3811:2;;;3857:1;3854;3847:12;3811:2;3893:54;3943:3;3934:6;3923:9;3919:22;3893:54;;;3885:5;3878;3874:17;3867:81;3722:237;4047:3;4036:9;4032:19;4019:33;4072:18;4064:6;4061:30;4058:2;;;4104:1;4101;4094:12;4058:2;4140:54;4190:3;4181:6;4170:9;4166:22;4140:54;;;4132:5;4125;4121:17;4114:81;3969:237;2085:2131;;;;;4223:118;;4290:46;4328:6;4315:20;4290:46;;;4281:55;;4275:66;;;;;4348:241;;4452:2;4440:9;4431:7;4427:23;4423:32;4420:2;;;4468:1;4465;4458:12;4420:2;4503:1;4520:53;4565:7;4556:6;4545:9;4541:22;4520:53;;;4510:63;;4482:97;4414:175;;;;;4596:360;;;4714:2;4702:9;4693:7;4689:23;4685:32;4682:2;;;4730:1;4727;4720:12;4682:2;4765:1;4782:53;4827:7;4818:6;4807:9;4803:22;4782:53;;;4772:63;;4744:97;4872:2;4890:50;4932:7;4923:6;4912:9;4908:22;4890:50;;;4880:60;;4851:95;4676:280;;;;;;4963:492;;;;5104:2;5092:9;5083:7;5079:23;5075:32;5072:2;;;5120:1;5117;5110:12;5072:2;5155:1;5172:53;5217:7;5208:6;5197:9;5193:22;5172:53;;;5162:63;;5134:97;5290:2;5279:9;5275:18;5262:32;5314:18;5306:6;5303:30;5300:2;;;5346:1;5343;5336:12;5300:2;5374:65;5431:7;5422:6;5411:9;5407:22;5374:65;;;5364:75;;;;5241:204;5066:389;;;;;;5462:611;;;;;5617:2;5605:9;5596:7;5592:23;5588:32;5585:2;;;5633:1;5630;5623:12;5585:2;5668:1;5685:53;5730:7;5721:6;5710:9;5706:22;5685:53;;;5675:63;;5647:97;5803:2;5792:9;5788:18;5775:32;5827:18;5819:6;5816:30;5813:2;;;5859:1;5856;5849:12;5813:2;5887:65;5944:7;5935:6;5924:9;5920:22;5887:65;;;5877:75;;;;5754:204;5989:2;6007:50;6049:7;6040:6;6029:9;6025:22;6007:50;;;5997:60;;5968:95;5579:494;;;;;;;;6080:615;;;;;6237:2;6225:9;6216:7;6212:23;6208:32;6205:2;;;6253:1;6250;6243:12;6205:2;6288:1;6305:53;6350:7;6341:6;6330:9;6326:22;6305:53;;;6295:63;;6267:97;6395:2;6413:53;6458:7;6449:6;6438:9;6434:22;6413:53;;;6403:63;;6374:98;6531:2;6520:9;6516:18;6503:32;6555:18;6547:6;6544:30;6541:2;;;6587:1;6584;6577:12;6541:2;6615:64;6671:7;6662:6;6651:9;6647:22;6615:64;;;6605:74;;;;6482:203;6199:496;;;;;;;;6702:367;;;6826:2;6814:9;6805:7;6801:23;6797:32;6794:2;;;6842:1;6839;6832:12;6794:2;6905:1;6894:9;6890:17;6877:31;6928:18;6920:6;6917:30;6914:2;;;6960:1;6957;6950:12;6914:2;6988:65;7045:7;7036:6;7025:9;7021:22;6988:65;;;6978:75;;;;6856:203;6788:281;;;;;;7076:851;;;;;7262:3;7250:9;7241:7;7237:23;7233:33;7230:2;;;7279:1;7276;7269:12;7230:2;7342:1;7331:9;7327:17;7314:31;7365:18;7357:6;7354:30;7351:2;;;7397:1;7394;7387:12;7351:2;7417:75;7484:7;7475:6;7464:9;7460:22;7417:75;;;7407:85;;7293:205;7529:2;7547:53;7592:7;7583:6;7572:9;7568:22;7547:53;;;7537:63;;7508:98;7637:2;7655:53;7700:7;7691:6;7680:9;7676:22;7655:53;;;7645:63;;7616:98;7773:2;7762:9;7758:18;7745:32;7797:18;7789:6;7786:30;7783:2;;;7829:1;7826;7819:12;7783:2;7849:62;7903:7;7894:6;7883:9;7879:22;7849:62;;;7839:72;;7724:193;7224:703;;;;;;;;7935:267;;8091:105;8192:3;8185:5;8091:105;;;8077:119;;8070:132;;;;;8210:110;8283:31;8308:5;8283:31;;;8278:3;8271:44;8265:55;;;8327:120;8410:31;8435:5;8410:31;;;8405:3;8398:44;8392:55;;;8535:1003;;8736:82;8812:5;8736:82;;;8831:114;8938:6;8933:3;8831:114;;;8824:121;;8968:3;9010:4;9002:6;8998:17;8993:3;8989:27;9036:84;9114:5;9036:84;;;9141:1;9126:373;9151:6;9148:1;9145:13;9126:373;;;9213:9;9207:4;9203:20;9198:3;9191:33;9239:120;9354:4;9345:6;9339:13;9239:120;;;9231:128;;9376:88;9457:6;9376:88;;;9366:98;;9487:4;9482:3;9478:14;9471:21;;9173:1;9170;9166:9;9161:14;;9126:373;;;9130:14;9512:4;9505:11;;9529:3;9522:10;;8715:823;;;;;;;;;9546:111;9623:28;9645:5;9623:28;;;9618:3;9611:41;9605:52;;;9664:343;;9774:38;9806:5;9774:38;;;9824:70;9887:6;9882:3;9824:70;;;9817:77;;9899:52;9944:6;9939:3;9932:4;9925:5;9921:16;9899:52;;;9972:29;9994:6;9972:29;;;9967:3;9963:39;9956:46;;9754:253;;;;;;10014:315;;10110:34;10138:5;10110:34;;;10156:60;10209:6;10204:3;10156:60;;;10149:67;;10221:52;10266:6;10261:3;10254:4;10247:5;10243:16;10221:52;;;10294:29;10316:6;10294:29;;;10289:3;10285:39;10278:46;;10090:239;;;;;;10359:818;;10476:5;10470:12;10510:1;10499:9;10495:17;10523:1;10518:247;;;;10776:1;10771:400;;;;10488:683;;10518:247;10596:4;10592:1;10581:9;10577:17;10573:28;10615:70;10678:6;10673:3;10615:70;;;10608:77;;10723:4;10719:9;10708;10704:25;10699:3;10692:38;10753:4;10748:3;10744:14;10737:21;;10525:240;10518:247;;10771:400;10840:1;10829:9;10825:17;10856:70;10919:6;10914:3;10856:70;;;10849:77;;10948:37;10979:5;10948:37;;;11001:1;11009:130;11023:6;11020:1;11017:13;11009:130;;;11088:7;11082:14;11078:1;11073:3;11069:11;11062:35;11129:1;11120:7;11116:15;11105:26;;11045:4;11042:1;11038:12;11033:17;;11009:130;;;11162:1;11157:3;11153:11;11146:18;;10778:393;;;10488:683;;10446:731;;;;;;11208:303;;11341:89;11423:6;11418:3;11341:89;;;11334:96;;11435:43;11471:6;11466:3;11459:5;11435:43;;;11499:6;11494:3;11490:16;11483:23;;11328:183;;;;;;11518:360;;11648:39;11681:5;11648:39;;;11699:89;11781:6;11776:3;11699:89;;;11692:96;;11793:52;11838:6;11833:3;11826:4;11819:5;11815:16;11793:52;;;11866:6;11861:3;11857:16;11850:23;;11628:250;;;;;;11885:319;;11983:35;12012:5;11983:35;;;12030:61;12084:6;12079:3;12030:61;;;12023:68;;12096:52;12141:6;12136:3;12129:4;12122:5;12118:16;12096:52;;;12169:29;12191:6;12169:29;;;12164:3;12160:39;12153:46;;11963:241;;;;;;12212:364;;12372:67;12436:2;12431:3;12372:67;;;12365:74;;12472:66;12468:1;12463:3;12459:11;12452:87;12567:2;12562:3;12558:12;12551:19;;12358:218;;;;12585:364;;12745:67;12809:2;12804:3;12745:67;;;12738:74;;12845:66;12841:1;12836:3;12832:11;12825:87;12940:2;12935:3;12931:12;12924:19;;12731:218;;;;12958:465;;13118:67;13182:2;13177:3;13118:67;;;13111:74;;13218:66;13214:1;13209:3;13205:11;13198:87;13319:66;13314:2;13309:3;13305:12;13298:88;13414:2;13409:3;13405:12;13398:19;;13104:319;;;;13432:465;;13592:67;13656:2;13651:3;13592:67;;;13585:74;;13692:66;13688:1;13683:3;13679:11;13672:87;13793:66;13788:2;13783:3;13779:12;13772:88;13888:2;13883:3;13879:12;13872:19;;13578:319;;;;13906:364;;14066:67;14130:2;14125:3;14066:67;;;14059:74;;14166:66;14162:1;14157:3;14153:11;14146:87;14261:2;14256:3;14252:12;14245:19;;14052:218;;;;14279:364;;14439:67;14503:2;14498:3;14439:67;;;14432:74;;14539:66;14535:1;14530:3;14526:11;14519:87;14634:2;14629:3;14625:12;14618:19;;14425:218;;;;14652:364;;14812:67;14876:2;14871:3;14812:67;;;14805:74;;14912:66;14908:1;14903:3;14899:11;14892:87;15007:2;15002:3;14998:12;14991:19;;14798:218;;;;15099:414;;15250:4;15245:3;15241:14;15337:3;15330:5;15326:15;15320:22;15387:3;15381:4;15377:14;15371:3;15366;15362:13;15355:37;15407:68;15470:4;15457:11;15407:68;;;15399:76;;15270:217;15504:4;15497:11;;15223:290;;;;;;15573:2261;;15718:5;15713:3;15709:15;15809:3;15802:5;15798:15;15792:22;15820:61;15876:3;15871;15867:13;15854:11;15820:61;;;15739:148;15967:4;15960:5;15956:16;15950:23;15979:62;16035:4;16030:3;16026:14;16013:11;15979:62;;;15897:150;16134:4;16127:5;16123:16;16117:23;16146:62;16202:4;16197:3;16193:14;16180:11;16146:62;;;16057:157;16295:4;16288:5;16284:16;16278:23;16307:62;16363:4;16358:3;16354:14;16341:11;16307:62;;;16224:151;16459:4;16452:5;16448:16;16442:23;16471:62;16527:4;16522:3;16518:14;16505:11;16471:62;;;16385:154;16623:4;16616:5;16612:16;16606:23;16635:62;16691:4;16686:3;16682:14;16669:11;16635:62;;;16549:154;16779:4;16772:5;16768:16;16762:23;16791:62;16847:4;16842:3;16838:14;16825:11;16791:62;;;16713:146;16935:4;16928:5;16924:16;16918:23;16947:62;17003:4;16998:3;16994:14;16981:11;16947:62;;;16869:146;17104:5;17097;17093:17;17087:24;17117:63;17173:5;17168:3;17164:15;17151:11;17117:63;;;17025:161;17258:5;17251;17247:17;17241:24;17271:63;17327:5;17322:3;17318:15;17305:11;17271:63;;;17196:144;17422:5;17415;17411:17;17405:24;17476:3;17470:4;17466:14;17458:5;17453:3;17449:15;17442:39;17496:66;17557:4;17544:11;17496:66;;;17488:74;;17350:224;17656:5;17649;17645:17;17639:24;17710:3;17704:4;17700:14;17692:5;17687:3;17683:15;17676:39;17730:66;17791:4;17778:11;17730:66;;;17722:74;;17584:224;17825:4;17818:11;;15691:2143;;;;;;17841:110;17914:31;17939:5;17914:31;;;17909:3;17902:44;17896:55;;;17958:120;18041:31;18066:5;18041:31;;;18036:3;18029:44;18023:55;;;18085:286;;18241:105;18342:3;18333:6;18325;18241:105;;;18234:112;;18363:3;18356:10;;18222:149;;;;;;18378:266;;18524:95;18615:3;18606:6;18524:95;;;18517:102;;18636:3;18629:10;;18505:139;;;;;18651:213;;18769:2;18758:9;18754:18;18746:26;;18783:71;18851:1;18840:9;18836:17;18827:6;18783:71;;;18740:124;;;;;18871:473;;19095:2;19084:9;19080:18;19072:26;;19145:9;19139:4;19135:20;19131:1;19120:9;19116:17;19109:47;19170:164;19329:4;19320:6;19170:164;;;19162:172;;19066:278;;;;;19351:201;;19463:2;19452:9;19448:18;19440:26;;19477:65;19539:1;19528:9;19524:17;19515:6;19477:65;;;19434:118;;;;;19559:407;;19750:2;19739:9;19735:18;19727:26;;19800:9;19794:4;19790:20;19786:1;19775:9;19771:17;19764:47;19825:131;19951:4;19825:131;;;19817:139;;19721:245;;;;19973:407;;20164:2;20153:9;20149:18;20141:26;;20214:9;20208:4;20204:20;20200:1;20189:9;20185:17;20178:47;20239:131;20365:4;20239:131;;;20231:139;;20135:245;;;;20387:407;;20578:2;20567:9;20563:18;20555:26;;20628:9;20622:4;20618:20;20614:1;20603:9;20599:17;20592:47;20653:131;20779:4;20653:131;;;20645:139;;20549:245;;;;20801:407;;20992:2;20981:9;20977:18;20969:26;;21042:9;21036:4;21032:20;21028:1;21017:9;21013:17;21006:47;21067:131;21193:4;21067:131;;;21059:139;;20963:245;;;;21215:407;;21406:2;21395:9;21391:18;21383:26;;21456:9;21450:4;21446:20;21442:1;21431:9;21427:17;21420:47;21481:131;21607:4;21481:131;;;21473:139;;21377:245;;;;21629:407;;21820:2;21809:9;21805:18;21797:26;;21870:9;21864:4;21860:20;21856:1;21845:9;21841:17;21834:47;21895:131;22021:4;21895:131;;;21887:139;;21791:245;;;;22043:407;;22234:2;22223:9;22219:18;22211:26;;22284:9;22278:4;22274:20;22270:1;22259:9;22255:17;22248:47;22309:131;22435:4;22309:131;;;22301:139;;22205:245;;;;22457:655;;22693:2;22682:9;22678:18;22670:26;;22743:9;22737:4;22733:20;22729:1;22718:9;22714:17;22707:47;22768:102;22865:4;22856:6;22768:102;;;22760:110;;22881:72;22949:2;22938:9;22934:18;22925:6;22881:72;;;23001:9;22995:4;22991:20;22986:2;22975:9;22971:18;22964:48;23026:76;23097:4;23088:6;23026:76;;;23018:84;;22664:448;;;;;;;23119:709;;23354:3;23343:9;23339:19;23331:27;;23369:71;23437:1;23426:9;23422:17;23413:6;23369:71;;;23451:72;23519:2;23508:9;23504:18;23495:6;23451:72;;;23571:9;23565:4;23561:20;23556:2;23545:9;23541:18;23534:48;23596:76;23667:4;23658:6;23596:76;;;23588:84;;23720:9;23714:4;23710:20;23705:2;23694:9;23690:18;23683:48;23745:73;23813:4;23804:6;23745:73;;;23737:81;;23325:503;;;;;;;;23835:256;;23897:2;23891:9;23881:19;;23935:4;23927:6;23923:17;24034:6;24022:10;24019:22;23998:18;23986:10;23983:34;23980:62;23977:2;;;24055:1;24052;24045:12;23977:2;24075:10;24071:2;24064:22;23875:216;;;;;24098:254;;24237:18;24229:6;24226:30;24223:2;;;24269:1;24266;24259:12;24223:2;24313:4;24309:9;24302:4;24294:6;24290:17;24286:33;24278:41;;24342:4;24336;24332:15;24324:23;;24160:192;;;;24359:258;;24502:18;24494:6;24491:30;24488:2;;;24534:1;24531;24524:12;24488:2;24578:4;24574:9;24567:4;24559:6;24555:17;24551:33;24543:41;;24607:4;24601;24597:15;24589:23;;24425:192;;;;24626:149;;24763:4;24755:6;24751:17;24740:28;;24732:43;;;;24786:125;;24862:4;24859:1;24852:15;24899:4;24896:1;24886:18;24874:30;;24844:67;;;;24920:135;;25044:5;25038:12;25028:22;;25022:33;;;;25062:87;;25138:5;25132:12;25122:22;;25116:33;;;;25156:91;;25236:5;25230:12;25220:22;;25214:33;;;;25254:88;;25331:5;25325:12;25315:22;;25309:33;;;;25349:92;;25430:5;25424:12;25414:22;;25408:33;;;;25449:150;;25588:4;25580:6;25576:17;25565:28;;25558:41;;;;25608:206;;25766:6;25761:3;25754:19;25803:4;25798:3;25794:14;25779:29;;25747:67;;;;;25823:152;;25927:6;25922:3;25915:19;25964:4;25959:3;25955:14;25940:29;;25908:67;;;;;25984:162;;26098:6;26093:3;26086:19;26135:4;26130:3;26126:14;26111:29;;26079:67;;;;;26155:153;;26260:6;26255:3;26248:19;26297:4;26292:3;26288:14;26273:29;;26241:67;;;;;26317:163;;26432:6;26427:3;26420:19;26469:4;26464:3;26460:14;26445:29;;26413:67;;;;;26489:145;;26625:3;26610:18;;26603:31;;;;;26642:105;;26711:31;26736:5;26711:31;;;26700:42;;26694:53;;;;26754:92;;26834:5;26827:13;26820:21;26809:32;;26803:43;;;;26853:128;;26933:42;26926:5;26922:54;26911:65;;26905:76;;;;26988:79;;27057:5;27046:16;;27040:27;;;;27074:105;;27143:31;27168:5;27143:31;;;27132:42;;27126:53;;;;27186:92;;27266:5;27259:13;27252:21;27241:32;;27235:43;;;;27285:79;;27354:5;27343:16;;27337:27;;;;27371:128;;27451:42;27444:5;27440:54;27429:65;;27423:76;;;;27506:79;;27575:5;27564:16;;27558:27;;;;27593:145;27674:6;27669:3;27664;27651:30;27730:1;27721:6;27716:3;27712:16;27705:27;27644:94;;;;27747:268;27812:1;27819:101;27833:6;27830:1;27827:13;27819:101;;;27909:1;27904:3;27900:11;27894:18;27890:1;27885:3;27881:11;27874:39;27855:2;27852:1;27848:10;27843:15;;27819:101;;;27935:6;27932:1;27929:13;27926:2;;;28000:1;27991:6;27986:3;27982:16;27975:27;27926:2;27796:219;;;;;28023:97;;28111:2;28107:7;28102:2;28095:5;28091:14;28087:28;28077:38;;28071:49;;;",
  "source": "/*\n\n  Copyright 2019 Microsponsors, Inc.\n  This work has been modified for use by Microsponsors, Inc.\n  This derivative work is licensed under the Apache License, Version 2.0\n  Original license notice below:\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.5;\npragma experimental ABIEncoderV2;\n\nimport \"./IExchange.sol\";\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\nimport \"@0x/contracts-utils/contracts/src/Ownable.sol\";\n\n\ncontract Whitelist is\n    Ownable\n{\n\n    // Microsponsors Registry Data:\n\n    // Mapping of address => whitelist status.\n    mapping (address => bool) public isWhitelisted;\n\n    // Mapping of contentId => address\n    mapping (string => address) private contentIdToAddress;\n\n    // Mapping of address => array of ContentId structs\n    struct ContentIdStruct {\n        string contentId;\n    }\n    mapping (address => ContentIdStruct[]) private addressToContentIds;\n\n\n    // Exchange contract.\n    // solhint-disable var-name-mixedcase\n    IExchange internal EXCHANGE;\n    bytes internal TX_ORIGIN_SIGNATURE;\n    // solhint-enable var-name-mixedcase\n\n    byte constant internal VALIDATOR_SIGNATURE_BYTE = \"\\x05\";\n\n    constructor (address _exchange)\n        public\n    {\n        EXCHANGE = IExchange(_exchange);\n        TX_ORIGIN_SIGNATURE = abi.encodePacked(address(this), VALIDATOR_SIGNATURE_BYTE);\n    }\n\n    /// @dev Admin adds  mapping\n    /// @param target Address to add or remove from whitelist.\n    /// @param contentId To map the address to.\n    /// @param isApproved Whitelist status to assign to address.\n    function adminUpdate(\n        address target,\n        string calldata contentId,\n        bool isApproved\n    )\n        external\n        onlyOwner\n    {\n\n        // TODO:\n        // Set max length of content ids by checking bytes(contentId).length\n\n        if (contentIdToAddress[contentId] != target) {\n\n            // If content id already belongs to another owner\n            // It must be explicitly removed from that owner using remove functions\n            // before it is re-assigned\n            require(\n                contentIdToAddress[contentId] == 0x0000000000000000000000000000000000000000,\n                \"REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS\"\n            );\n\n            // Assign content id to new owner\n            addressToContentIds[target].push( ContentIdStruct(contentId) );\n            contentIdToAddress[contentId] = target;\n\n        }\n\n        isWhitelisted[target] = isApproved;\n\n    }\n\n\n    /// @dev Admin updates whitelist status for a given address.\n    /// @param target Address to update.\n    /// @param isApproved Whitelist status to assign to address.\n    function adminUpdateWhitelistStatus(\n        address target,\n        bool isApproved\n    )\n        external\n        onlyOwner\n    {\n\n        // TODO only require this IF admin is trying to set isApproved to true\n        require(\n          getNumContentIds(target) > 0,\n          'ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS'\n        );\n\n        isWhitelisted[target] = isApproved;\n\n    }\n\n    /// @dev Admin updates whitelist status for a given address.\n    function adminRemoveContentIdFromAddress(\n        address target,\n        string calldata contentId\n    )\n        external\n        onlyOwner\n    {\n\n        contentIdToAddress[contentId] = address(0x0000000000000000000000000000000000000000);\n\n        // Remove content id from addressToContentIds mapping\n        ContentIdStruct[] memory m = addressToContentIds[target];\n        for (uint i = 0; i < m.length; i++) {\n            if (stringsMatch(contentId, m[i].contentId)) {\n                addressToContentIds[target][i] = ContentIdStruct('');\n            }\n        }\n\n        // If address has no valid content ids left, remove from Whitelist\n        if (getNumContentIds(target) == 0) {\n            isWhitelisted[target] = false;\n        }\n\n    }\n\n\n    function adminGetAddressByContentId(\n        string calldata contentId\n    )\n        external\n        view\n        onlyOwner\n        returns (address target)\n    {\n\n        return contentIdToAddress[contentId];\n\n    }\n\n\n    /// @dev Admin gets contentIds mapped to a valid whitelisted address.\n    /// @param target Ethereum address to validate & return contentIds for.\n    function adminGetContentIdsByAddress(\n        address target\n    )\n        external\n        view\n        onlyOwner\n        returns (ContentIdStruct[] memory)\n    {\n\n        require(\n            isWhitelisted[target],\n            \"ADDRESS_NOT_WHITELISTED\"\n        );\n\n        return addressToContentIds[target];\n\n    }\n\n\n    /// @dev Valid whitelisted address can query its own contentIds.\n    function getContentIdsByAddress()\n        external\n        view\n        returns (ContentIdStruct[] memory)\n    {\n\n        require(\n            isWhitelisted[msg.sender],\n            'INVALID_SENDER'\n        );\n\n        return addressToContentIds[msg.sender];\n\n    }\n\n\n    /// @dev Verifies signer is same as signer of current Ethereum transaction.\n    ///      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n    ///      Extra safety checks can be added for a production contract.\n    /// @param signerAddress Address that should have signed the given hash.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    // solhint-disable no-unused-vars\n    function isValidSignature(\n        bytes32 hash,\n        address signerAddress,\n        bytes calldata signature\n    )\n        external\n        view\n        returns (bool isValid)\n    {\n        // solhint-disable-next-line avoid-tx-origin\n        return signerAddress == tx.origin;\n    }\n    // solhint-enable no-unused-vars\n\n    /// @dev Fills an order using `msg.sender` as the taker.\n    ///      The transaction will revert if both the maker and taker are not whitelisted.\n    ///      Orders should specify this contract as the `senderAddress` in order to gaurantee\n    ///      that both maker and taker have been whitelisted.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n    /// @param orderSignature Proof that order has been created by maker.\n    function fillOrderIfWhitelisted(\n        LibOrder.Order memory order,\n        uint256 takerAssetFillAmount,\n        uint256 salt,\n        bytes memory orderSignature\n    )\n        public\n    {\n        address takerAddress = msg.sender;\n\n        // This contract must be the entry point for the transaction.\n        require(\n            // solhint-disable-next-line avoid-tx-origin\n            takerAddress == tx.origin,\n            \"INVALID_SENDER\"\n        );\n\n        // Check if maker is on the whitelist.\n        require(\n            isWhitelisted[order.makerAddress],\n            \"MAKER_NOT_WHITELISTED\"\n        );\n\n        // Check if taker is on the whitelist.\n        require(\n            isWhitelisted[takerAddress],\n            \"TAKER_NOT_WHITELISTED\"\n        );\n\n        // Encode arguments into byte array.\n        bytes memory data = abi.encodeWithSelector(\n            EXCHANGE.fillOrder.selector,\n            order,\n            takerAssetFillAmount,\n            orderSignature\n        );\n\n        // Call `fillOrder` via `executeTransaction`.\n        EXCHANGE.executeTransaction(\n            salt,\n            takerAddress,\n            data,\n            TX_ORIGIN_SIGNATURE\n        );\n    }\n\n\n    /* Helpers */\n\n    function stringsMatch (\n        string memory a,\n        string memory b\n    )\n        private\n        pure\n        returns (bool)\n    {\n        return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))) );\n    }\n\n    function getNumContentIds (\n        address target\n    )\n        private\n        view\n        returns (uint16 result)\n    {\n\n        ContentIdStruct[] memory m = addressToContentIds[target];\n        uint16 counter = 0;\n        for (uint i = 0; i < m.length; i++) {\n            if (!stringsMatch('', m[i].contentId)) {\n                counter++;\n            }\n        }\n\n        return counter;\n\n    }\n\n}\n",
  "sourcePath": "/Users/lauren/github/registry-contract/contracts/Whitelist.sol",
  "ast": {
    "absolutePath": "/Users/lauren/github/registry-contract/contracts/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        735
      ]
    },
    "id": 736,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 329,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "785:23:8"
      },
      {
        "id": 330,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "809:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/registry-contract/contracts/IExchange.sol",
        "file": "./IExchange.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 736,
        "sourceUnit": 37,
        "src": "844:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 332,
        "nodeType": "ImportDirective",
        "scope": 736,
        "sourceUnit": 993,
        "src": "870:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-utils/contracts/src/Ownable.sol",
        "file": "@0x/contracts-utils/contracts/src/Ownable.sol",
        "id": 333,
        "nodeType": "ImportDirective",
        "scope": 736,
        "sourceUnit": 1041,
        "src": "935:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 334,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1040,
              "src": "1019:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1040",
                "typeString": "contract Ownable"
              }
            },
            "id": 335,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:7:8"
          }
        ],
        "contractDependencies": [
          1040,
          1217
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 735,
        "linearizedBaseContracts": [
          735,
          1040,
          1217
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 339,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1118:46:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 338,
              "keyType": {
                "id": 336,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1127:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1118:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 337,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1138:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 343,
            "name": "contentIdToAddress",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1210:54:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 342,
              "keyType": {
                "id": 340,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1219:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1210:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 341,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1229:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Whitelist.ContentIdStruct",
            "id": 346,
            "members": [
              {
                "constant": false,
                "id": 345,
                "name": "contentId",
                "nodeType": "VariableDeclaration",
                "scope": 346,
                "src": "1360:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 344,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1360:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ContentIdStruct",
            "nodeType": "StructDefinition",
            "scope": 735,
            "src": "1327:56:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 351,
            "name": "addressToContentIds",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1388:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Whitelist.ContentIdStruct[])"
            },
            "typeName": {
              "id": 350,
              "keyType": {
                "id": 347,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1397:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1388:38:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Whitelist.ContentIdStruct[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 348,
                  "name": "ContentIdStruct",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 346,
                  "src": "1408:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                    "typeString": "struct Whitelist.ContentIdStruct"
                  }
                },
                "id": 349,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1408:17:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                  "typeString": "struct Whitelist.ContentIdStruct[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 353,
            "name": "EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1530:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$36",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 352,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36,
              "src": "1530:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$36",
                "typeString": "contract IExchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 355,
            "name": "TX_ORIGIN_SIGNATURE",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1563:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 354,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1563:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 358,
            "name": "VALIDATOR_SIGNATURE_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1645:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes1",
              "typeString": "bytes1"
            },
            "typeName": {
              "id": 356,
              "name": "byte",
              "nodeType": "ElementaryTypeName",
              "src": "1645:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes1",
                "typeString": "bytes1"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "05",
              "id": 357,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1695:6:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbb8d0f4c497851a5043c6363657698cb1387682cac2f786c731f8936109d795",
                "typeString": "literal_string \"\u0005\""
              },
              "value": "\u0005"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "1759:137:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 363,
                      "name": "EXCHANGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "1769:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$36",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 365,
                          "name": "_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "1790:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 364,
                        "name": "IExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1780:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchange_$36_$",
                          "typeString": "type(contract IExchange)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1780:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$36",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "1769:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$36",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 369,
                      "name": "TX_ORIGIN_SIGNATURE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "1810:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 373,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "1857:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$735",
                                "typeString": "contract Whitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Whitelist_$735",
                                "typeString": "contract Whitelist"
                              }
                            ],
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1849:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1849:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "VALIDATOR_SIGNATURE_BYTE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "1864:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1832:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1832:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1832:57:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1810:79:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:79:8"
                }
              ]
            },
            "documentation": null,
            "id": 380,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "1721:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1720:19:8"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:0:8"
            },
            "scope": 735,
            "src": "1708:188:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "2261:770:8",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 391,
                        "name": "contentIdToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "2371:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "contentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "2390:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2371:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "2404:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2371:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 421,
                  "nodeType": "IfStatement",
                  "src": "2367:612:8",
                  "trueBody": {
                    "id": 420,
                    "nodeType": "Block",
                    "src": "2412:567:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 397,
                                  "name": "contentIdToAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 343,
                                  "src": "2638:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                    "typeString": "mapping(string memory => address)"
                                  }
                                },
                                "id": 399,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 398,
                                  "name": "contentId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "2657:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2638:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2671:42:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              "src": "2638:75:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "52454d4f56455f434f4e54454e545f49445f46524f4d5f50524556494f55535f4f574e45525f41444452455353",
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2731:47:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63dc658f1ca24085983c3bfb08c2fdf6d08f3514363d432d99f26ba110251ed1",
                                "typeString": "literal_string \"REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS\""
                              },
                              "value": "REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63dc658f1ca24085983c3bfb08c2fdf6d08f3514363d432d99f26ba110251ed1",
                                "typeString": "literal_string \"REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS\""
                              }
                            ],
                            "id": 396,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1235,
                              1236
                            ],
                            "referencedDeclaration": 1236,
                            "src": "2613:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2613:179:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 404,
                        "nodeType": "ExpressionStatement",
                        "src": "2613:179:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 410,
                                  "name": "contentId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "2903:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "id": 409,
                                "name": "ContentIdStruct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "2887:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_ContentIdStruct_$346_storage_ptr_$",
                                  "typeString": "type(struct Whitelist.ContentIdStruct storage pointer)"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2887:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                "typeString": "struct Whitelist.ContentIdStruct memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                "typeString": "struct Whitelist.ContentIdStruct memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 405,
                                "name": "addressToContentIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "2853:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                                }
                              },
                              "id": 407,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 406,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 382,
                                "src": "2873:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2853:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                                "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2853:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ContentIdStruct_$346_storage_$returns$_t_uint256_$",
                              "typeString": "function (struct Whitelist.ContentIdStruct storage ref) returns (uint256)"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 413,
                        "nodeType": "ExpressionStatement",
                        "src": "2853:62:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 414,
                              "name": "contentIdToAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "2929:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 416,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 415,
                              "name": "contentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "2948:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2929:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "2961:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2929:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "2929:38:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 422,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "2989:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "3003:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2989:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "3013:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2989:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:34:8"
                }
              ]
            },
            "documentation": "@dev Admin adds  mapping\n @param target Address to add or remove from whitelist.\n @param contentId To map the address to.\n @param isApproved Whitelist status to assign to address.",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 388,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "2247:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2247:9:8"
              }
            ],
            "name": "adminUpdate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "2141:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "name": "contentId",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "2165:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 386,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "2200:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2131:90:8"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:0:8"
            },
            "scope": 735,
            "src": "2111:920:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "3339:251:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 440,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "3465:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 439,
                            "name": "getNumContentIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "3448:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint16_$",
                              "typeString": "function (address) view returns (uint16)"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3448:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3475:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3448:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "414444524553535f4841535f4e4f5f4153534f4349415445445f434f4e54454e545f494453",
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3488:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69ceda11df6791be8c7b4c7ed6d7940867cbee6c59fa513b014822d87d35a1fd",
                          "typeString": "literal_string \"ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS\""
                        },
                        "value": "ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69ceda11df6791be8c7b4c7ed6d7940867cbee6c59fa513b014822d87d35a1fd",
                          "typeString": "literal_string \"ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "3429:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:108:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:108:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 447,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "3548:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 449,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 448,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "3562:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3548:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 450,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "3572:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3548:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:34:8"
                }
              ]
            },
            "documentation": "@dev Admin updates whitelist status for a given address.\n @param target Address to update.\n @param isApproved Whitelist status to assign to address.",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 436,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 435,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "3325:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3325:9:8"
              }
            ],
            "name": "adminUpdateWhitelistStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "3254:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 433,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "3278:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3244:55:8"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3339:0:8"
            },
            "scope": 735,
            "src": "3209:381:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "3806:604:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "contentIdToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "3817:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "contentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "3836:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3817:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3857:42:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3849:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3849:51:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3817:83:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:83:8"
                },
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "name": "m",
                      "nodeType": "VariableDeclaration",
                      "scope": 524,
                      "src": "3973:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 472,
                          "name": "ContentIdStruct",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 346,
                          "src": "3973:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                            "typeString": "struct Whitelist.ContentIdStruct"
                          }
                        },
                        "id": 473,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3973:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 475,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "4002:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 477,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "4022:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4002:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3973:56:8"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "4075:154:8",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "contentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "4106:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 492,
                                  "name": "m",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "4117:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                                    "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                                  }
                                },
                                "id": 494,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 493,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "4119:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4117:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                  "typeString": "struct Whitelist.ContentIdStruct memory"
                                }
                              },
                              "id": 495,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 345,
                              "src": "4117:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 490,
                            "name": "stringsMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "4093:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory,string memory) pure returns (bool)"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4093:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 508,
                        "nodeType": "IfStatement",
                        "src": "4089:130:8",
                        "trueBody": {
                          "id": 507,
                          "nodeType": "Block",
                          "src": "4134:85:8",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 497,
                                      "name": "addressToContentIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 351,
                                      "src": "4152:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 500,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 498,
                                      "name": "target",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 456,
                                      "src": "4172:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4152:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                                    }
                                  },
                                  "id": 501,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 499,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "4180:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4152:30:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage",
                                    "typeString": "struct Whitelist.ContentIdStruct storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "",
                                      "id": 503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4201:2:8",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "id": 502,
                                    "name": "ContentIdStruct",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 346,
                                    "src": "4185:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_ContentIdStruct_$346_storage_ptr_$",
                                      "typeString": "type(struct Whitelist.ContentIdStruct storage pointer)"
                                    }
                                  },
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4185:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                    "typeString": "struct Whitelist.ContentIdStruct memory"
                                  }
                                },
                                "src": "4152:52:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage",
                                  "typeString": "struct Whitelist.ContentIdStruct storage ref"
                                }
                              },
                              "id": 506,
                              "nodeType": "ExpressionStatement",
                              "src": "4152:52:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 483,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "4056:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "4060:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4060:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4056:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "initializationExpression": {
                    "assignments": [
                      480
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 480,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "4044:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4044:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 482,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4053:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4044:10:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4070:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "4070:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 489,
                    "nodeType": "ExpressionStatement",
                    "src": "4070:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "4039:190:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "4335:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 511,
                        "name": "getNumContentIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "4318:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint16_$",
                          "typeString": "function (address) view returns (uint16)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4318:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4346:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4318:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 523,
                  "nodeType": "IfStatement",
                  "src": "4314:89:8",
                  "trueBody": {
                    "id": 522,
                    "nodeType": "Block",
                    "src": "4349:54:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "isWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "4363:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 518,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 517,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "4377:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4363:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4387:5:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4363:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "4363:29:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Admin updates whitelist status for a given address.",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 460,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "3792:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3792:9:8"
              }
            ],
            "name": "adminRemoveContentIdFromAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3711:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "name": "contentId",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3735:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3701:65:8"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3806:0:8"
            },
            "scope": 735,
            "src": "3661:749:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "4579:55:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "contentIdToAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "4597:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 536,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 535,
                      "name": "contentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "4616:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4597:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 533,
                  "id": 537,
                  "nodeType": "Return",
                  "src": "4590:36:8"
                }
              ]
            },
            "documentation": null,
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 530,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 529,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "4532:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4532:9:8"
              }
            ],
            "name": "adminGetAddressByContentId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "contentId",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4462:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4452:41:8"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4559:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4558:16:8"
            },
            "scope": 735,
            "src": "4417:217:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "4953:155:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 550,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "4985:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 552,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "4999:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4985:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "414444524553535f4e4f545f57484954454c4953544544",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5020:25:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c75805c89ace7f04ee6f3028a95190568ce425213650d9736e5b110adf20c61",
                          "typeString": "literal_string \"ADDRESS_NOT_WHITELISTED\""
                        },
                        "value": "ADDRESS_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c75805c89ace7f04ee6f3028a95190568ce425213650d9736e5b110adf20c61",
                          "typeString": "literal_string \"ADDRESS_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "4964:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4964:91:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4964:91:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "5073:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 558,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "5093:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5073:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 548,
                  "id": 559,
                  "nodeType": "Return",
                  "src": "5066:34:8"
                }
              ]
            },
            "documentation": "@dev Admin gets contentIds mapped to a valid whitelisted address.\n @param target Ethereum address to validate & return contentIds for.",
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 544,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 543,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "4896:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4896:9:8"
              }
            ],
            "name": "adminGetContentIdsByAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4837:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4837:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4827:30:8"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4923:24:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                    "typeString": "struct Whitelist.ContentIdStruct[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 545,
                      "name": "ContentIdStruct",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 346,
                      "src": "4923:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct"
                      }
                    },
                    "id": 546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4923:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                      "typeString": "struct Whitelist.ContentIdStruct[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4922:26:8"
            },
            "scope": 735,
            "src": "4791:317:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "5295:154:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "5327:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 571,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 569,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "5341:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5341:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5327:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:16:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "5306:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5306:86:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "5306:86:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 575,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "5410:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 578,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1232,
                        "src": "5430:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5430:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5410:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "5403:38:8"
                }
              ]
            },
            "documentation": "@dev Valid whitelisted address can query its own contentIds.",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContentIdsByAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5215:2:8"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5265:24:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                    "typeString": "struct Whitelist.ContentIdStruct[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 563,
                      "name": "ContentIdStruct",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 346,
                      "src": "5265:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct"
                      }
                    },
                    "id": 564,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5265:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                      "typeString": "struct Whitelist.ContentIdStruct[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5264:26:8"
            },
            "scope": 735,
            "src": "5184:265:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "6112:103:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 592,
                      "name": "signerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "6182:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "6199:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6199:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6182:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "6175:33:8"
                }
              ]
            },
            "documentation": "@dev Verifies signer is same as signer of current Ethereum transaction.\n      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n      Extra safety checks can be added for a production contract.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "5963:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "5985:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5985:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "6016:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6016:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5953:93:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "6094:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6094:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:14:8"
            },
            "scope": 735,
            "src": "5928:287:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "7055:1013:8",
              "statements": [
                {
                  "assignments": [
                    610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 610,
                      "name": "takerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7065:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 609,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7065:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 613,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "7088:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7088:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7065:33:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 615,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "7257:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 616,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "7273:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7273:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7257:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7296:16:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "7179:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:143:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:143:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 623,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "7401:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 626,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 624,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "7415:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                              "typeString": "struct LibOrder.Order memory"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 914,
                          "src": "7415:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7401:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d414b45525f4e4f545f57484954454c4953544544",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7448:23:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        },
                        "value": "MAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "7380:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7380:101:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "7380:101:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 631,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "7560:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 633,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 632,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "7574:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7560:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54414b45525f4e4f545f57484954454c4953544544",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7601:23:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        },
                        "value": "TAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "7539:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7539:95:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "7539:95:8"
                },
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7690:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7690:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 641,
                            "name": "EXCHANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "7746:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$36",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "7746:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$937_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_FillResults_$818_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory,uint256,bytes memory) external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7746:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "7787:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "7806:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "orderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "7840:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "7710:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7710:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7710:154:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7690:174:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "7970:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "7988:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "8014:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "TX_ORIGIN_SIGNATURE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "8032:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "EXCHANGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "7929:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$36",
                          "typeString": "contract IExchange"
                        }
                      },
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 132,
                      "src": "7929:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7929:132:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "7929:132:8"
                }
              ]
            },
            "documentation": "@dev Fills an order using `msg.sender` as the taker.\n      The transaction will revert if both the maker and taker are not whitelisted.\n      Orders should specify this contract as the `senderAddress` in order to gaurantee\n      that both maker and taker have been whitelisted.\n @param order Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n @param orderSignature Proof that order has been created by maker.",
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fillOrderIfWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "6905:27:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 599,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 937,
                    "src": "6905:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$937_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "6942:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6942:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "6980:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6980:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "name": "orderSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "7002:27:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6895:140:8"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7055:0:8"
            },
            "scope": 735,
            "src": "6864:1204:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "8229:95:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 671,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 661,
                                      "src": "8275:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 672,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8274:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 669,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "8257:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8257:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8257:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 668,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "8247:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8247:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 678,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 663,
                                      "src": "8311:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 679,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8310:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 676,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "8293:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8293:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8293:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 675,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "8283:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8283:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8247:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 683,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8246:71:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 667,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "8239:78:8"
                }
              ]
            },
            "documentation": null,
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stringsMatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "8126:15:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8126:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "8151:15:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8151:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8116:56:8"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 666,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "8219:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8219:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8218:6:8"
            },
            "scope": 735,
            "src": "8094:230:8",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "8452:278:8",
              "statements": [
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "name": "m",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "8463:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 694,
                          "name": "ContentIdStruct",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 346,
                          "src": "8463:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                            "typeString": "struct Whitelist.ContentIdStruct"
                          }
                        },
                        "id": 695,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "8463:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 700,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 697,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "8492:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 699,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 698,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "8512:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8492:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8463:56:8"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "8529:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8529:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8546:1:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8529:18:8"
                },
                {
                  "body": {
                    "id": 729,
                    "nodeType": "Block",
                    "src": "8593:105:8",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8611:33:8",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8625:2:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 718,
                                    "name": "m",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 696,
                                    "src": "8629:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                                      "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                                    }
                                  },
                                  "id": 720,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 719,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 706,
                                    "src": "8631:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8629:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                    "typeString": "struct Whitelist.ContentIdStruct memory"
                                  }
                                },
                                "id": 721,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contentId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 345,
                                "src": "8629:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 716,
                              "name": "stringsMatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "8612:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (string memory,string memory) pure returns (bool)"
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8612:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 728,
                        "nodeType": "IfStatement",
                        "src": "8607:81:8",
                        "trueBody": {
                          "id": 727,
                          "nodeType": "Block",
                          "src": "8646:42:8",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8664:9:8",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 724,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "8664:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 726,
                              "nodeType": "ExpressionStatement",
                              "src": "8664:9:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "8574:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "8578:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8578:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8574:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "initializationExpression": {
                    "assignments": [
                      706
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 706,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "8562:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8562:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 708,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8571:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8562:10:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8588:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "8588:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 715,
                    "nodeType": "ExpressionStatement",
                    "src": "8588:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "8557:141:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 731,
                    "name": "counter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 702,
                    "src": "8715:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 692,
                  "id": 732,
                  "nodeType": "Return",
                  "src": "8708:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumContentIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "8366:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8356:30:8"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "8433:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8433:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8432:15:8"
            },
            "scope": 735,
            "src": "8330:400:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 736,
        "src": "993:7740:8"
      }
    ],
    "src": "785:7949:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/lauren/github/registry-contract/contracts/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        735
      ]
    },
    "id": 736,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 329,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "785:23:8"
      },
      {
        "id": 330,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "809:33:8"
      },
      {
        "absolutePath": "/Users/lauren/github/registry-contract/contracts/IExchange.sol",
        "file": "./IExchange.sol",
        "id": 331,
        "nodeType": "ImportDirective",
        "scope": 736,
        "sourceUnit": 37,
        "src": "844:25:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 332,
        "nodeType": "ImportDirective",
        "scope": 736,
        "sourceUnit": 993,
        "src": "870:64:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-utils/contracts/src/Ownable.sol",
        "file": "@0x/contracts-utils/contracts/src/Ownable.sol",
        "id": 333,
        "nodeType": "ImportDirective",
        "scope": 736,
        "sourceUnit": 1041,
        "src": "935:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 334,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1040,
              "src": "1019:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1040",
                "typeString": "contract Ownable"
              }
            },
            "id": 335,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:7:8"
          }
        ],
        "contractDependencies": [
          1040,
          1217
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 735,
        "linearizedBaseContracts": [
          735,
          1040,
          1217
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 339,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1118:46:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 338,
              "keyType": {
                "id": 336,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1127:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1118:25:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 337,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1138:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 343,
            "name": "contentIdToAddress",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1210:54:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 342,
              "keyType": {
                "id": 340,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1219:6:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1210:27:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 341,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1229:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Whitelist.ContentIdStruct",
            "id": 346,
            "members": [
              {
                "constant": false,
                "id": 345,
                "name": "contentId",
                "nodeType": "VariableDeclaration",
                "scope": 346,
                "src": "1360:16:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 344,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1360:6:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ContentIdStruct",
            "nodeType": "StructDefinition",
            "scope": 735,
            "src": "1327:56:8",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 351,
            "name": "addressToContentIds",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1388:66:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Whitelist.ContentIdStruct[])"
            },
            "typeName": {
              "id": 350,
              "keyType": {
                "id": 347,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1397:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1388:38:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Whitelist.ContentIdStruct[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 348,
                  "name": "ContentIdStruct",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 346,
                  "src": "1408:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                    "typeString": "struct Whitelist.ContentIdStruct"
                  }
                },
                "id": 349,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "1408:17:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                  "typeString": "struct Whitelist.ContentIdStruct[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 353,
            "name": "EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1530:27:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$36",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 352,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 36,
              "src": "1530:9:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$36",
                "typeString": "contract IExchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 355,
            "name": "TX_ORIGIN_SIGNATURE",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1563:34:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 354,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1563:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 358,
            "name": "VALIDATOR_SIGNATURE_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 735,
            "src": "1645:56:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes1",
              "typeString": "bytes1"
            },
            "typeName": {
              "id": 356,
              "name": "byte",
              "nodeType": "ElementaryTypeName",
              "src": "1645:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes1",
                "typeString": "bytes1"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "05",
              "id": 357,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1695:6:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbb8d0f4c497851a5043c6363657698cb1387682cac2f786c731f8936109d795",
                "typeString": "literal_string \"\u0005\""
              },
              "value": "\u0005"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "1759:137:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 363,
                      "name": "EXCHANGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "1769:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$36",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 365,
                          "name": "_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "1790:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 364,
                        "name": "IExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1780:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchange_$36_$",
                          "typeString": "type(contract IExchange)"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1780:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$36",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "1769:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$36",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:31:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 369,
                      "name": "TX_ORIGIN_SIGNATURE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "1810:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 373,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1274,
                              "src": "1857:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$735",
                                "typeString": "contract Whitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Whitelist_$735",
                                "typeString": "contract Whitelist"
                              }
                            ],
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1849:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1849:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 375,
                          "name": "VALIDATOR_SIGNATURE_BYTE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "1864:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 370,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1832:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1832:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1832:57:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1810:79:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:79:8"
                }
              ]
            },
            "documentation": null,
            "id": 380,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 360,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "1721:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1720:19:8"
            },
            "returnParameters": {
              "id": 362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:0:8"
            },
            "scope": 735,
            "src": "1708:188:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "2261:770:8",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 391,
                        "name": "contentIdToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "2371:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 392,
                        "name": "contentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "2390:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2371:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "2404:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2371:39:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 421,
                  "nodeType": "IfStatement",
                  "src": "2367:612:8",
                  "trueBody": {
                    "id": 420,
                    "nodeType": "Block",
                    "src": "2412:567:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 397,
                                  "name": "contentIdToAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 343,
                                  "src": "2638:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                    "typeString": "mapping(string memory => address)"
                                  }
                                },
                                "id": 399,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 398,
                                  "name": "contentId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "2657:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2638:29:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2671:42:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                "value": "0x0000000000000000000000000000000000000000"
                              },
                              "src": "2638:75:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "52454d4f56455f434f4e54454e545f49445f46524f4d5f50524556494f55535f4f574e45525f41444452455353",
                              "id": 402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2731:47:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63dc658f1ca24085983c3bfb08c2fdf6d08f3514363d432d99f26ba110251ed1",
                                "typeString": "literal_string \"REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS\""
                              },
                              "value": "REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63dc658f1ca24085983c3bfb08c2fdf6d08f3514363d432d99f26ba110251ed1",
                                "typeString": "literal_string \"REMOVE_CONTENT_ID_FROM_PREVIOUS_OWNER_ADDRESS\""
                              }
                            ],
                            "id": 396,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1235,
                              1236
                            ],
                            "referencedDeclaration": 1236,
                            "src": "2613:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2613:179:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 404,
                        "nodeType": "ExpressionStatement",
                        "src": "2613:179:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 410,
                                  "name": "contentId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "2903:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "id": 409,
                                "name": "ContentIdStruct",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "2887:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_ContentIdStruct_$346_storage_ptr_$",
                                  "typeString": "type(struct Whitelist.ContentIdStruct storage pointer)"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2887:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                "typeString": "struct Whitelist.ContentIdStruct memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                "typeString": "struct Whitelist.ContentIdStruct memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 405,
                                "name": "addressToContentIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "2853:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                                }
                              },
                              "id": 407,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 406,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 382,
                                "src": "2873:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2853:27:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                                "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                              }
                            },
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2853:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_ContentIdStruct_$346_storage_$returns$_t_uint256_$",
                              "typeString": "function (struct Whitelist.ContentIdStruct storage ref) returns (uint256)"
                            }
                          },
                          "id": 412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:62:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 413,
                        "nodeType": "ExpressionStatement",
                        "src": "2853:62:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 414,
                              "name": "contentIdToAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "2929:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 416,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 415,
                              "name": "contentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "2948:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2929:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 417,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "2961:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2929:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "2929:38:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 422,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "2989:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "3003:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2989:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "3013:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2989:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:34:8"
                }
              ]
            },
            "documentation": "@dev Admin adds  mapping\n @param target Address to add or remove from whitelist.\n @param contentId To map the address to.\n @param isApproved Whitelist status to assign to address.",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 389,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 388,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "2247:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2247:9:8"
              }
            ],
            "name": "adminUpdate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "2141:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "name": "contentId",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "2165:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 386,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "2200:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2131:90:8"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:0:8"
            },
            "scope": 735,
            "src": "2111:920:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "3339:251:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 440,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "3465:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 439,
                            "name": "getNumContentIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "3448:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint16_$",
                              "typeString": "function (address) view returns (uint16)"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3448:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3475:1:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3448:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "414444524553535f4841535f4e4f5f4153534f4349415445445f434f4e54454e545f494453",
                        "id": 444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3488:39:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69ceda11df6791be8c7b4c7ed6d7940867cbee6c59fa513b014822d87d35a1fd",
                          "typeString": "literal_string \"ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS\""
                        },
                        "value": "ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69ceda11df6791be8c7b4c7ed6d7940867cbee6c59fa513b014822d87d35a1fd",
                          "typeString": "literal_string \"ADDRESS_HAS_NO_ASSOCIATED_CONTENT_IDS\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "3429:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:108:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:108:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 447,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 339,
                        "src": "3548:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 449,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 448,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "3562:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3548:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 450,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "3572:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3548:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:34:8"
                }
              ]
            },
            "documentation": "@dev Admin updates whitelist status for a given address.\n @param target Address to update.\n @param isApproved Whitelist status to assign to address.",
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 436,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 435,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "3325:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3325:9:8"
              }
            ],
            "name": "adminUpdateWhitelistStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "3254:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 433,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 454,
                  "src": "3278:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3244:55:8"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3339:0:8"
            },
            "scope": 735,
            "src": "3209:381:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "3806:604:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "contentIdToAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 343,
                        "src": "3817:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "contentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "3836:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3817:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3857:42:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x0000000000000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3849:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3849:51:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3817:83:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "3817:83:8"
                },
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "name": "m",
                      "nodeType": "VariableDeclaration",
                      "scope": 524,
                      "src": "3973:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 472,
                          "name": "ContentIdStruct",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 346,
                          "src": "3973:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                            "typeString": "struct Whitelist.ContentIdStruct"
                          }
                        },
                        "id": 473,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3973:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 475,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "4002:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 477,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "4022:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4002:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3973:56:8"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "4075:154:8",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 491,
                              "name": "contentId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "4106:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 492,
                                  "name": "m",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 474,
                                  "src": "4117:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                                    "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                                  }
                                },
                                "id": 494,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 493,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 480,
                                  "src": "4119:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4117:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                  "typeString": "struct Whitelist.ContentIdStruct memory"
                                }
                              },
                              "id": 495,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "contentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 345,
                              "src": "4117:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 490,
                            "name": "stringsMatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "4093:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (string memory,string memory) pure returns (bool)"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4093:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 508,
                        "nodeType": "IfStatement",
                        "src": "4089:130:8",
                        "trueBody": {
                          "id": 507,
                          "nodeType": "Block",
                          "src": "4134:85:8",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 497,
                                      "name": "addressToContentIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 351,
                                      "src": "4152:19:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                                      }
                                    },
                                    "id": 500,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 498,
                                      "name": "target",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 456,
                                      "src": "4172:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4152:27:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                                    }
                                  },
                                  "id": 501,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 499,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 480,
                                    "src": "4180:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4152:30:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage",
                                    "typeString": "struct Whitelist.ContentIdStruct storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "",
                                      "id": 503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4201:2:8",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      },
                                      "value": ""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "id": 502,
                                    "name": "ContentIdStruct",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 346,
                                    "src": "4185:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_ContentIdStruct_$346_storage_ptr_$",
                                      "typeString": "type(struct Whitelist.ContentIdStruct storage pointer)"
                                    }
                                  },
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4185:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                    "typeString": "struct Whitelist.ContentIdStruct memory"
                                  }
                                },
                                "src": "4152:52:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage",
                                  "typeString": "struct Whitelist.ContentIdStruct storage ref"
                                }
                              },
                              "id": 506,
                              "nodeType": "ExpressionStatement",
                              "src": "4152:52:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 483,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "4056:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "4060:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                        }
                      },
                      "id": 485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4060:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4056:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 510,
                  "initializationExpression": {
                    "assignments": [
                      480
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 480,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "4044:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4044:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 482,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4053:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4044:10:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4070:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 480,
                        "src": "4070:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 489,
                    "nodeType": "ExpressionStatement",
                    "src": "4070:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "4039:190:8"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 456,
                          "src": "4335:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 511,
                        "name": "getNumContentIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "4318:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint16_$",
                          "typeString": "function (address) view returns (uint16)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4318:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4346:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4318:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 523,
                  "nodeType": "IfStatement",
                  "src": "4314:89:8",
                  "trueBody": {
                    "id": 522,
                    "nodeType": "Block",
                    "src": "4349:54:8",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "isWhitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "4363:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 518,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 517,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 456,
                              "src": "4377:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4363:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4387:5:8",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4363:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "ExpressionStatement",
                        "src": "4363:29:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Admin updates whitelist status for a given address.",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 460,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "3792:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3792:9:8"
              }
            ],
            "name": "adminRemoveContentIdFromAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3711:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 458,
                  "name": "contentId",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "3735:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3701:65:8"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3806:0:8"
            },
            "scope": 735,
            "src": "3661:749:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 538,
              "nodeType": "Block",
              "src": "4579:55:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 534,
                      "name": "contentIdToAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "4597:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 536,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 535,
                      "name": "contentId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "4616:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4597:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 533,
                  "id": 537,
                  "nodeType": "Return",
                  "src": "4590:36:8"
                }
              ]
            },
            "documentation": null,
            "id": 539,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 530,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 529,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "4532:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4532:9:8"
              }
            ],
            "name": "adminGetAddressByContentId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 527,
                  "name": "contentId",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4462:25:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4452:41:8"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "4559:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4559:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4558:16:8"
            },
            "scope": 735,
            "src": "4417:217:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "4953:155:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 550,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "4985:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 552,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 551,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "4999:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4985:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "414444524553535f4e4f545f57484954454c4953544544",
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5020:25:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c75805c89ace7f04ee6f3028a95190568ce425213650d9736e5b110adf20c61",
                          "typeString": "literal_string \"ADDRESS_NOT_WHITELISTED\""
                        },
                        "value": "ADDRESS_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c75805c89ace7f04ee6f3028a95190568ce425213650d9736e5b110adf20c61",
                          "typeString": "literal_string \"ADDRESS_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "4964:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4964:91:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4964:91:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "5073:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 558,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 541,
                      "src": "5093:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5073:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 548,
                  "id": 559,
                  "nodeType": "Return",
                  "src": "5066:34:8"
                }
              ]
            },
            "documentation": "@dev Admin gets contentIds mapped to a valid whitelisted address.\n @param target Ethereum address to validate & return contentIds for.",
            "id": 561,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 544,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 543,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1020,
                  "src": "4896:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4896:9:8"
              }
            ],
            "name": "adminGetContentIdsByAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4837:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4837:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4827:30:8"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 561,
                  "src": "4923:24:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                    "typeString": "struct Whitelist.ContentIdStruct[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 545,
                      "name": "ContentIdStruct",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 346,
                      "src": "4923:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct"
                      }
                    },
                    "id": 546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4923:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                      "typeString": "struct Whitelist.ContentIdStruct[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4922:26:8"
            },
            "scope": 735,
            "src": "4791:317:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "5295:154:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "5327:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 571,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 569,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1232,
                            "src": "5341:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5341:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5327:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:16:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "5306:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5306:86:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "5306:86:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 575,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "5410:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 578,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 576,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1232,
                        "src": "5430:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5430:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5410:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "5403:38:8"
                }
              ]
            },
            "documentation": "@dev Valid whitelisted address can query its own contentIds.",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContentIdsByAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5215:2:8"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5265:24:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                    "typeString": "struct Whitelist.ContentIdStruct[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 563,
                      "name": "ContentIdStruct",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 346,
                      "src": "5265:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct"
                      }
                    },
                    "id": 564,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5265:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                      "typeString": "struct Whitelist.ContentIdStruct[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5264:26:8"
            },
            "scope": 735,
            "src": "5184:265:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 597,
              "nodeType": "Block",
              "src": "6112:103:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 592,
                      "name": "signerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "6182:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 593,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1244,
                        "src": "6199:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6199:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6182:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 591,
                  "id": 596,
                  "nodeType": "Return",
                  "src": "6175:33:8"
                }
              ]
            },
            "documentation": "@dev Verifies signer is same as signer of current Ethereum transaction.\n      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n      Extra safety checks can be added for a production contract.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "5963:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 585,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "5985:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5985:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "6016:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6016:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5953:93:8"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 598,
                  "src": "6094:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6094:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:14:8"
            },
            "scope": 735,
            "src": "5928:287:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 658,
              "nodeType": "Block",
              "src": "7055:1013:8",
              "statements": [
                {
                  "assignments": [
                    610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 610,
                      "name": "takerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7065:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 609,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7065:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 613,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1232,
                      "src": "7088:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7088:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7065:33:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 615,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "7257:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 616,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1244,
                            "src": "7273:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7273:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7257:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7296:16:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "7179:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:143:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:143:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 623,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "7401:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 626,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 624,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "7415:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                              "typeString": "struct LibOrder.Order memory"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 914,
                          "src": "7415:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7401:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d414b45525f4e4f545f57484954454c4953544544",
                        "id": 627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7448:23:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        },
                        "value": "MAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "7380:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7380:101:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "7380:101:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 631,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "7560:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 633,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 632,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "7574:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7560:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54414b45525f4e4f545f57484954454c4953544544",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7601:23:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        },
                        "value": "TAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1235,
                        1236
                      ],
                      "referencedDeclaration": 1236,
                      "src": "7539:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7539:95:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "7539:95:8"
                },
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 658,
                      "src": "7690:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7690:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 641,
                            "name": "EXCHANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "7746:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$36",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "7746:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$937_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_FillResults_$818_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory,uint256,bytes memory) external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7746:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "7787:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "7806:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 646,
                        "name": "orderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "7840:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "7710:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7710:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7710:154:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7690:174:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 652,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "7970:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "7988:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "8014:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 655,
                        "name": "TX_ORIGIN_SIGNATURE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "8032:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "EXCHANGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "7929:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$36",
                          "typeString": "contract IExchange"
                        }
                      },
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 132,
                      "src": "7929:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7929:132:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "7929:132:8"
                }
              ]
            },
            "documentation": "@dev Fills an order using `msg.sender` as the taker.\n      The transaction will revert if both the maker and taker are not whitelisted.\n      Orders should specify this contract as the `senderAddress` in order to gaurantee\n      that both maker and taker have been whitelisted.\n @param order Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n @param orderSignature Proof that order has been created by maker.",
            "id": 659,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fillOrderIfWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "6905:27:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$937_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 599,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 937,
                    "src": "6905:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$937_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 602,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "6942:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6942:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 604,
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "6980:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6980:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 606,
                  "name": "orderSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 659,
                  "src": "7002:27:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 605,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7002:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6895:140:8"
            },
            "returnParameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7055:0:8"
            },
            "scope": 735,
            "src": "6864:1204:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "8229:95:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 671,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 661,
                                      "src": "8275:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 672,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8274:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 669,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "8257:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8257:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8257:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 668,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "8247:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8247:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "components": [
                                    {
                                      "argumentTypes": null,
                                      "id": 678,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 663,
                                      "src": "8311:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 679,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8310:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 676,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "8293:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8293:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8293:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 675,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1226,
                            "src": "8283:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8283:32:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8247:68:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 683,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8246:71:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 667,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "8239:78:8"
                }
              ]
            },
            "documentation": null,
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stringsMatch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "8126:15:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8126:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "8151:15:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8151:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8116:56:8"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 666,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "8219:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8219:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8218:6:8"
            },
            "scope": 735,
            "src": "8094:230:8",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "8452:278:8",
              "statements": [
                {
                  "assignments": [
                    696
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 696,
                      "name": "m",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "8463:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                        "typeString": "struct Whitelist.ContentIdStruct[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 694,
                          "name": "ContentIdStruct",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 346,
                          "src": "8463:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ContentIdStruct_$346_storage_ptr",
                            "typeString": "struct Whitelist.ContentIdStruct"
                          }
                        },
                        "id": 695,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "8463:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 700,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 697,
                      "name": "addressToContentIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "8492:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Whitelist.ContentIdStruct storage ref[] storage ref)"
                      }
                    },
                    "id": 699,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 698,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "8512:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8492:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_storage_$dyn_storage",
                      "typeString": "struct Whitelist.ContentIdStruct storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8463:56:8"
                },
                {
                  "assignments": [
                    702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 702,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 733,
                      "src": "8529:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8529:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 704,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8546:1:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8529:18:8"
                },
                {
                  "body": {
                    "id": 729,
                    "nodeType": "Block",
                    "src": "8593:105:8",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8611:33:8",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8625:2:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 718,
                                    "name": "m",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 696,
                                    "src": "8629:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                                      "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                                    }
                                  },
                                  "id": 720,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 719,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 706,
                                    "src": "8631:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8629:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ContentIdStruct_$346_memory",
                                    "typeString": "struct Whitelist.ContentIdStruct memory"
                                  }
                                },
                                "id": 721,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "contentId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 345,
                                "src": "8629:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 716,
                              "name": "stringsMatch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "8612:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (string memory,string memory) pure returns (bool)"
                              }
                            },
                            "id": 722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8612:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 728,
                        "nodeType": "IfStatement",
                        "src": "8607:81:8",
                        "trueBody": {
                          "id": 727,
                          "nodeType": "Block",
                          "src": "8646:42:8",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8664:9:8",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 724,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 702,
                                  "src": "8664:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 726,
                              "nodeType": "ExpressionStatement",
                              "src": "8664:9:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 709,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "8574:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "m",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "8578:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ContentIdStruct_$346_memory_$dyn_memory_ptr",
                          "typeString": "struct Whitelist.ContentIdStruct memory[] memory"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8578:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8574:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 730,
                  "initializationExpression": {
                    "assignments": [
                      706
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 706,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "8562:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8562:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 708,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8571:1:8",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8562:10:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8588:3:8",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 713,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 706,
                        "src": "8588:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 715,
                    "nodeType": "ExpressionStatement",
                    "src": "8588:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "8557:141:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 731,
                    "name": "counter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 702,
                    "src": "8715:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 692,
                  "id": 732,
                  "nodeType": "Return",
                  "src": "8708:14:8"
                }
              ]
            },
            "documentation": null,
            "id": 734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNumContentIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "8366:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8356:30:8"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "8433:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8433:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8432:15:8"
            },
            "scope": 735,
            "src": "8330:400:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 736,
        "src": "993:7740:8"
      }
    ],
    "src": "785:7949:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {
    "1562979126760": {
      "events": {},
      "links": {},
      "address": "0xE1F116a4D6c9e939d000aF6978ef967E105C6258",
      "transactionHash": "0xe6d761433c66afa3fc950e60647786682baf91d7b10fa2df7991d49a07ef5e8c"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-07-13T00:54:29.595Z",
  "devdoc": {
    "methods": {
      "adminGetContentIdsByAddress(address)": {
        "details": "Admin gets contentIds mapped to a valid whitelisted address.",
        "params": {
          "target": "Ethereum address to validate & return contentIds for."
        }
      },
      "adminRemoveContentIdFromAddress(address,string)": {
        "details": "Admin updates whitelist status for a given address."
      },
      "adminUpdate(address,string,bool)": {
        "details": "Admin adds  mapping",
        "params": {
          "contentId": "To map the address to.",
          "isApproved": "Whitelist status to assign to address.",
          "target": "Address to add or remove from whitelist."
        }
      },
      "adminUpdateWhitelistStatus(address,bool)": {
        "details": "Admin updates whitelist status for a given address.",
        "params": {
          "isApproved": "Whitelist status to assign to address.",
          "target": "Address to update."
        }
      },
      "fillOrderIfWhitelisted((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,uint256,bytes)": {
        "details": "Fills an order using `msg.sender` as the taker.      The transaction will revert if both the maker and taker are not whitelisted.      Orders should specify this contract as the `senderAddress` in order to gaurantee      that both maker and taker have been whitelisted.",
        "params": {
          "order": "Order struct containing order specifications.",
          "orderSignature": "Proof that order has been created by maker.",
          "salt": "Arbitrary value to gaurantee uniqueness of 0x transaction hash.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "getContentIdsByAddress()": {
        "details": "Valid whitelisted address can query its own contentIds."
      },
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Verifies signer is same as signer of current Ethereum transaction.      NOTE: This function can currently be used to validate signatures coming from outside of this contract.      Extra safety checks can be added for a production contract.",
        "params": {
          "signature": "Proof of signing.",
          "signerAddress": "Address that should have signed the given hash."
        },
        "return": "Validity of order signature."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}